syntax = "proto3";

package bmp_grapher_proto;

message RGB {
  int32 red = 1;
  int32 green = 2;
  int32 blue = 3;
}

message MandelbrotConfig {
  int32 max_iterations = 1;

  // each run defines a different colour scheme and output filename
  // to be generated from the same cached fractal calculation. 
  message MandelbrotRunArgs {
    string out_filename = 1;

    enum MandelbrotColorScheme {
      SINGLE = 0;
    }
    MandelbrotColorScheme color_scheme = 2;

    message SingleColorSchemeArgs {
      RGB mandelbrot_color = 1;
      RGB base_color = 2;
    }

    oneof color_scheme_args {
      SingleColorSchemeArgs single_color_scheme_args = 3;
    }
  }

  repeated MandelbrotRunArgs run_args = 2;
}

message QuadraticConfig {
  double param_a = 1;
  double param_b = 2;
  double param_c = 3;

  // each run defines a different colour scheme and output filename
  // to be generated from the same cached fractal calculation. 
  message QuadraticRunArgs {
    string out_filename = 1;

    enum QuadraticColorScheme {
      DUAL = 0;
    }
    QuadraticColorScheme color_scheme = 2;

    message DualColorSchemeArgs {
      
      double max_distance = 1;
      RGB background_color = 2;
      RGB curve_color = 3;
    }

    oneof color_scheme_args {
      DualColorSchemeArgs dual_color_scheme_args = 3;
    }
  }

  repeated QuadraticRunArgs run_args = 4;
}

message BmpGrapher {
  double x_center = 1;
  double y_center = 2;
  double x_domain_width = 3;
  int32 pixel_width = 4;
  int32 pixel_height = 5;

  oneof bmp_grapher_config {
    MandelbrotConfig mandelbrot_config = 6;
    QuadraticConfig quadratic_config = 7;
  }
}

message BmpGrapherFactory {
  repeated BmpGrapher bitmaps = 1;
}