// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bmp_grapher.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_bmp_5fgrapher_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_bmp_5fgrapher_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_bmp_5fgrapher_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_bmp_5fgrapher_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[9]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_bmp_5fgrapher_2eproto;
namespace bmp_grapher_proto {
class BmpGrapher;
class BmpGrapherDefaultTypeInternal;
extern BmpGrapherDefaultTypeInternal _BmpGrapher_default_instance_;
class BmpGrapherFactory;
class BmpGrapherFactoryDefaultTypeInternal;
extern BmpGrapherFactoryDefaultTypeInternal _BmpGrapherFactory_default_instance_;
class MandelbrotConfig;
class MandelbrotConfigDefaultTypeInternal;
extern MandelbrotConfigDefaultTypeInternal _MandelbrotConfig_default_instance_;
class MandelbrotConfig_MandelbrotRunArgs;
class MandelbrotConfig_MandelbrotRunArgsDefaultTypeInternal;
extern MandelbrotConfig_MandelbrotRunArgsDefaultTypeInternal _MandelbrotConfig_MandelbrotRunArgs_default_instance_;
class MandelbrotConfig_MandelbrotRunArgs_SingleColorSchemeArgs;
class MandelbrotConfig_MandelbrotRunArgs_SingleColorSchemeArgsDefaultTypeInternal;
extern MandelbrotConfig_MandelbrotRunArgs_SingleColorSchemeArgsDefaultTypeInternal _MandelbrotConfig_MandelbrotRunArgs_SingleColorSchemeArgs_default_instance_;
class QuadraticConfig;
class QuadraticConfigDefaultTypeInternal;
extern QuadraticConfigDefaultTypeInternal _QuadraticConfig_default_instance_;
class QuadraticConfig_QuadraticRunArgs;
class QuadraticConfig_QuadraticRunArgsDefaultTypeInternal;
extern QuadraticConfig_QuadraticRunArgsDefaultTypeInternal _QuadraticConfig_QuadraticRunArgs_default_instance_;
class QuadraticConfig_QuadraticRunArgs_DualColorSchemeArgs;
class QuadraticConfig_QuadraticRunArgs_DualColorSchemeArgsDefaultTypeInternal;
extern QuadraticConfig_QuadraticRunArgs_DualColorSchemeArgsDefaultTypeInternal _QuadraticConfig_QuadraticRunArgs_DualColorSchemeArgs_default_instance_;
class RGB;
class RGBDefaultTypeInternal;
extern RGBDefaultTypeInternal _RGB_default_instance_;
}  // namespace bmp_grapher_proto
PROTOBUF_NAMESPACE_OPEN
template<> ::bmp_grapher_proto::BmpGrapher* Arena::CreateMaybeMessage<::bmp_grapher_proto::BmpGrapher>(Arena*);
template<> ::bmp_grapher_proto::BmpGrapherFactory* Arena::CreateMaybeMessage<::bmp_grapher_proto::BmpGrapherFactory>(Arena*);
template<> ::bmp_grapher_proto::MandelbrotConfig* Arena::CreateMaybeMessage<::bmp_grapher_proto::MandelbrotConfig>(Arena*);
template<> ::bmp_grapher_proto::MandelbrotConfig_MandelbrotRunArgs* Arena::CreateMaybeMessage<::bmp_grapher_proto::MandelbrotConfig_MandelbrotRunArgs>(Arena*);
template<> ::bmp_grapher_proto::MandelbrotConfig_MandelbrotRunArgs_SingleColorSchemeArgs* Arena::CreateMaybeMessage<::bmp_grapher_proto::MandelbrotConfig_MandelbrotRunArgs_SingleColorSchemeArgs>(Arena*);
template<> ::bmp_grapher_proto::QuadraticConfig* Arena::CreateMaybeMessage<::bmp_grapher_proto::QuadraticConfig>(Arena*);
template<> ::bmp_grapher_proto::QuadraticConfig_QuadraticRunArgs* Arena::CreateMaybeMessage<::bmp_grapher_proto::QuadraticConfig_QuadraticRunArgs>(Arena*);
template<> ::bmp_grapher_proto::QuadraticConfig_QuadraticRunArgs_DualColorSchemeArgs* Arena::CreateMaybeMessage<::bmp_grapher_proto::QuadraticConfig_QuadraticRunArgs_DualColorSchemeArgs>(Arena*);
template<> ::bmp_grapher_proto::RGB* Arena::CreateMaybeMessage<::bmp_grapher_proto::RGB>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace bmp_grapher_proto {

enum MandelbrotConfig_MandelbrotRunArgs_MandelbrotColorScheme : int {
  MandelbrotConfig_MandelbrotRunArgs_MandelbrotColorScheme_SINGLE = 0,
  MandelbrotConfig_MandelbrotRunArgs_MandelbrotColorScheme_MandelbrotConfig_MandelbrotRunArgs_MandelbrotColorScheme_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  MandelbrotConfig_MandelbrotRunArgs_MandelbrotColorScheme_MandelbrotConfig_MandelbrotRunArgs_MandelbrotColorScheme_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool MandelbrotConfig_MandelbrotRunArgs_MandelbrotColorScheme_IsValid(int value);
constexpr MandelbrotConfig_MandelbrotRunArgs_MandelbrotColorScheme MandelbrotConfig_MandelbrotRunArgs_MandelbrotColorScheme_MandelbrotColorScheme_MIN = MandelbrotConfig_MandelbrotRunArgs_MandelbrotColorScheme_SINGLE;
constexpr MandelbrotConfig_MandelbrotRunArgs_MandelbrotColorScheme MandelbrotConfig_MandelbrotRunArgs_MandelbrotColorScheme_MandelbrotColorScheme_MAX = MandelbrotConfig_MandelbrotRunArgs_MandelbrotColorScheme_SINGLE;
constexpr int MandelbrotConfig_MandelbrotRunArgs_MandelbrotColorScheme_MandelbrotColorScheme_ARRAYSIZE = MandelbrotConfig_MandelbrotRunArgs_MandelbrotColorScheme_MandelbrotColorScheme_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MandelbrotConfig_MandelbrotRunArgs_MandelbrotColorScheme_descriptor();
template<typename T>
inline const std::string& MandelbrotConfig_MandelbrotRunArgs_MandelbrotColorScheme_Name(T enum_t_value) {
  static_assert(::std::is_same<T, MandelbrotConfig_MandelbrotRunArgs_MandelbrotColorScheme>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function MandelbrotConfig_MandelbrotRunArgs_MandelbrotColorScheme_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    MandelbrotConfig_MandelbrotRunArgs_MandelbrotColorScheme_descriptor(), enum_t_value);
}
inline bool MandelbrotConfig_MandelbrotRunArgs_MandelbrotColorScheme_Parse(
    const std::string& name, MandelbrotConfig_MandelbrotRunArgs_MandelbrotColorScheme* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<MandelbrotConfig_MandelbrotRunArgs_MandelbrotColorScheme>(
    MandelbrotConfig_MandelbrotRunArgs_MandelbrotColorScheme_descriptor(), name, value);
}
enum QuadraticConfig_QuadraticRunArgs_QuadraticColorScheme : int {
  QuadraticConfig_QuadraticRunArgs_QuadraticColorScheme_DUAL = 0,
  QuadraticConfig_QuadraticRunArgs_QuadraticColorScheme_QuadraticConfig_QuadraticRunArgs_QuadraticColorScheme_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  QuadraticConfig_QuadraticRunArgs_QuadraticColorScheme_QuadraticConfig_QuadraticRunArgs_QuadraticColorScheme_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool QuadraticConfig_QuadraticRunArgs_QuadraticColorScheme_IsValid(int value);
constexpr QuadraticConfig_QuadraticRunArgs_QuadraticColorScheme QuadraticConfig_QuadraticRunArgs_QuadraticColorScheme_QuadraticColorScheme_MIN = QuadraticConfig_QuadraticRunArgs_QuadraticColorScheme_DUAL;
constexpr QuadraticConfig_QuadraticRunArgs_QuadraticColorScheme QuadraticConfig_QuadraticRunArgs_QuadraticColorScheme_QuadraticColorScheme_MAX = QuadraticConfig_QuadraticRunArgs_QuadraticColorScheme_DUAL;
constexpr int QuadraticConfig_QuadraticRunArgs_QuadraticColorScheme_QuadraticColorScheme_ARRAYSIZE = QuadraticConfig_QuadraticRunArgs_QuadraticColorScheme_QuadraticColorScheme_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* QuadraticConfig_QuadraticRunArgs_QuadraticColorScheme_descriptor();
template<typename T>
inline const std::string& QuadraticConfig_QuadraticRunArgs_QuadraticColorScheme_Name(T enum_t_value) {
  static_assert(::std::is_same<T, QuadraticConfig_QuadraticRunArgs_QuadraticColorScheme>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function QuadraticConfig_QuadraticRunArgs_QuadraticColorScheme_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    QuadraticConfig_QuadraticRunArgs_QuadraticColorScheme_descriptor(), enum_t_value);
}
inline bool QuadraticConfig_QuadraticRunArgs_QuadraticColorScheme_Parse(
    const std::string& name, QuadraticConfig_QuadraticRunArgs_QuadraticColorScheme* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<QuadraticConfig_QuadraticRunArgs_QuadraticColorScheme>(
    QuadraticConfig_QuadraticRunArgs_QuadraticColorScheme_descriptor(), name, value);
}
// ===================================================================

class RGB :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bmp_grapher_proto.RGB) */ {
 public:
  RGB();
  virtual ~RGB();

  RGB(const RGB& from);
  RGB(RGB&& from) noexcept
    : RGB() {
    *this = ::std::move(from);
  }

  inline RGB& operator=(const RGB& from) {
    CopyFrom(from);
    return *this;
  }
  inline RGB& operator=(RGB&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RGB& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RGB* internal_default_instance() {
    return reinterpret_cast<const RGB*>(
               &_RGB_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(RGB& a, RGB& b) {
    a.Swap(&b);
  }
  inline void Swap(RGB* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RGB* New() const final {
    return CreateMaybeMessage<RGB>(nullptr);
  }

  RGB* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RGB>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RGB& from);
  void MergeFrom(const RGB& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RGB* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bmp_grapher_proto.RGB";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bmp_5fgrapher_2eproto);
    return ::descriptor_table_bmp_5fgrapher_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRedFieldNumber = 1,
    kGreenFieldNumber = 2,
    kBlueFieldNumber = 3,
  };
  // int32 red = 1;
  void clear_red();
  ::PROTOBUF_NAMESPACE_ID::int32 red() const;
  void set_red(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_red() const;
  void _internal_set_red(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 green = 2;
  void clear_green();
  ::PROTOBUF_NAMESPACE_ID::int32 green() const;
  void set_green(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_green() const;
  void _internal_set_green(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 blue = 3;
  void clear_blue();
  ::PROTOBUF_NAMESPACE_ID::int32 blue() const;
  void set_blue(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_blue() const;
  void _internal_set_blue(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:bmp_grapher_proto.RGB)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::int32 red_;
  ::PROTOBUF_NAMESPACE_ID::int32 green_;
  ::PROTOBUF_NAMESPACE_ID::int32 blue_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_bmp_5fgrapher_2eproto;
};
// -------------------------------------------------------------------

class MandelbrotConfig_MandelbrotRunArgs_SingleColorSchemeArgs :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bmp_grapher_proto.MandelbrotConfig.MandelbrotRunArgs.SingleColorSchemeArgs) */ {
 public:
  MandelbrotConfig_MandelbrotRunArgs_SingleColorSchemeArgs();
  virtual ~MandelbrotConfig_MandelbrotRunArgs_SingleColorSchemeArgs();

  MandelbrotConfig_MandelbrotRunArgs_SingleColorSchemeArgs(const MandelbrotConfig_MandelbrotRunArgs_SingleColorSchemeArgs& from);
  MandelbrotConfig_MandelbrotRunArgs_SingleColorSchemeArgs(MandelbrotConfig_MandelbrotRunArgs_SingleColorSchemeArgs&& from) noexcept
    : MandelbrotConfig_MandelbrotRunArgs_SingleColorSchemeArgs() {
    *this = ::std::move(from);
  }

  inline MandelbrotConfig_MandelbrotRunArgs_SingleColorSchemeArgs& operator=(const MandelbrotConfig_MandelbrotRunArgs_SingleColorSchemeArgs& from) {
    CopyFrom(from);
    return *this;
  }
  inline MandelbrotConfig_MandelbrotRunArgs_SingleColorSchemeArgs& operator=(MandelbrotConfig_MandelbrotRunArgs_SingleColorSchemeArgs&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MandelbrotConfig_MandelbrotRunArgs_SingleColorSchemeArgs& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MandelbrotConfig_MandelbrotRunArgs_SingleColorSchemeArgs* internal_default_instance() {
    return reinterpret_cast<const MandelbrotConfig_MandelbrotRunArgs_SingleColorSchemeArgs*>(
               &_MandelbrotConfig_MandelbrotRunArgs_SingleColorSchemeArgs_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(MandelbrotConfig_MandelbrotRunArgs_SingleColorSchemeArgs& a, MandelbrotConfig_MandelbrotRunArgs_SingleColorSchemeArgs& b) {
    a.Swap(&b);
  }
  inline void Swap(MandelbrotConfig_MandelbrotRunArgs_SingleColorSchemeArgs* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MandelbrotConfig_MandelbrotRunArgs_SingleColorSchemeArgs* New() const final {
    return CreateMaybeMessage<MandelbrotConfig_MandelbrotRunArgs_SingleColorSchemeArgs>(nullptr);
  }

  MandelbrotConfig_MandelbrotRunArgs_SingleColorSchemeArgs* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MandelbrotConfig_MandelbrotRunArgs_SingleColorSchemeArgs>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MandelbrotConfig_MandelbrotRunArgs_SingleColorSchemeArgs& from);
  void MergeFrom(const MandelbrotConfig_MandelbrotRunArgs_SingleColorSchemeArgs& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MandelbrotConfig_MandelbrotRunArgs_SingleColorSchemeArgs* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bmp_grapher_proto.MandelbrotConfig.MandelbrotRunArgs.SingleColorSchemeArgs";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bmp_5fgrapher_2eproto);
    return ::descriptor_table_bmp_5fgrapher_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMandelbrotColorFieldNumber = 1,
    kBaseColorFieldNumber = 2,
  };
  // .bmp_grapher_proto.RGB mandelbrot_color = 1;
  bool has_mandelbrot_color() const;
  private:
  bool _internal_has_mandelbrot_color() const;
  public:
  void clear_mandelbrot_color();
  const ::bmp_grapher_proto::RGB& mandelbrot_color() const;
  ::bmp_grapher_proto::RGB* release_mandelbrot_color();
  ::bmp_grapher_proto::RGB* mutable_mandelbrot_color();
  void set_allocated_mandelbrot_color(::bmp_grapher_proto::RGB* mandelbrot_color);
  private:
  const ::bmp_grapher_proto::RGB& _internal_mandelbrot_color() const;
  ::bmp_grapher_proto::RGB* _internal_mutable_mandelbrot_color();
  public:

  // .bmp_grapher_proto.RGB base_color = 2;
  bool has_base_color() const;
  private:
  bool _internal_has_base_color() const;
  public:
  void clear_base_color();
  const ::bmp_grapher_proto::RGB& base_color() const;
  ::bmp_grapher_proto::RGB* release_base_color();
  ::bmp_grapher_proto::RGB* mutable_base_color();
  void set_allocated_base_color(::bmp_grapher_proto::RGB* base_color);
  private:
  const ::bmp_grapher_proto::RGB& _internal_base_color() const;
  ::bmp_grapher_proto::RGB* _internal_mutable_base_color();
  public:

  // @@protoc_insertion_point(class_scope:bmp_grapher_proto.MandelbrotConfig.MandelbrotRunArgs.SingleColorSchemeArgs)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::bmp_grapher_proto::RGB* mandelbrot_color_;
  ::bmp_grapher_proto::RGB* base_color_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_bmp_5fgrapher_2eproto;
};
// -------------------------------------------------------------------

class MandelbrotConfig_MandelbrotRunArgs :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bmp_grapher_proto.MandelbrotConfig.MandelbrotRunArgs) */ {
 public:
  MandelbrotConfig_MandelbrotRunArgs();
  virtual ~MandelbrotConfig_MandelbrotRunArgs();

  MandelbrotConfig_MandelbrotRunArgs(const MandelbrotConfig_MandelbrotRunArgs& from);
  MandelbrotConfig_MandelbrotRunArgs(MandelbrotConfig_MandelbrotRunArgs&& from) noexcept
    : MandelbrotConfig_MandelbrotRunArgs() {
    *this = ::std::move(from);
  }

  inline MandelbrotConfig_MandelbrotRunArgs& operator=(const MandelbrotConfig_MandelbrotRunArgs& from) {
    CopyFrom(from);
    return *this;
  }
  inline MandelbrotConfig_MandelbrotRunArgs& operator=(MandelbrotConfig_MandelbrotRunArgs&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MandelbrotConfig_MandelbrotRunArgs& default_instance();

  enum ColorSchemeArgsCase {
    kSingleColorSchemeArgs = 3,
    COLOR_SCHEME_ARGS_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MandelbrotConfig_MandelbrotRunArgs* internal_default_instance() {
    return reinterpret_cast<const MandelbrotConfig_MandelbrotRunArgs*>(
               &_MandelbrotConfig_MandelbrotRunArgs_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(MandelbrotConfig_MandelbrotRunArgs& a, MandelbrotConfig_MandelbrotRunArgs& b) {
    a.Swap(&b);
  }
  inline void Swap(MandelbrotConfig_MandelbrotRunArgs* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MandelbrotConfig_MandelbrotRunArgs* New() const final {
    return CreateMaybeMessage<MandelbrotConfig_MandelbrotRunArgs>(nullptr);
  }

  MandelbrotConfig_MandelbrotRunArgs* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MandelbrotConfig_MandelbrotRunArgs>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MandelbrotConfig_MandelbrotRunArgs& from);
  void MergeFrom(const MandelbrotConfig_MandelbrotRunArgs& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MandelbrotConfig_MandelbrotRunArgs* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bmp_grapher_proto.MandelbrotConfig.MandelbrotRunArgs";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bmp_5fgrapher_2eproto);
    return ::descriptor_table_bmp_5fgrapher_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef MandelbrotConfig_MandelbrotRunArgs_SingleColorSchemeArgs SingleColorSchemeArgs;

  typedef MandelbrotConfig_MandelbrotRunArgs_MandelbrotColorScheme MandelbrotColorScheme;
  static constexpr MandelbrotColorScheme SINGLE =
    MandelbrotConfig_MandelbrotRunArgs_MandelbrotColorScheme_SINGLE;
  static inline bool MandelbrotColorScheme_IsValid(int value) {
    return MandelbrotConfig_MandelbrotRunArgs_MandelbrotColorScheme_IsValid(value);
  }
  static constexpr MandelbrotColorScheme MandelbrotColorScheme_MIN =
    MandelbrotConfig_MandelbrotRunArgs_MandelbrotColorScheme_MandelbrotColorScheme_MIN;
  static constexpr MandelbrotColorScheme MandelbrotColorScheme_MAX =
    MandelbrotConfig_MandelbrotRunArgs_MandelbrotColorScheme_MandelbrotColorScheme_MAX;
  static constexpr int MandelbrotColorScheme_ARRAYSIZE =
    MandelbrotConfig_MandelbrotRunArgs_MandelbrotColorScheme_MandelbrotColorScheme_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  MandelbrotColorScheme_descriptor() {
    return MandelbrotConfig_MandelbrotRunArgs_MandelbrotColorScheme_descriptor();
  }
  template<typename T>
  static inline const std::string& MandelbrotColorScheme_Name(T enum_t_value) {
    static_assert(::std::is_same<T, MandelbrotColorScheme>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function MandelbrotColorScheme_Name.");
    return MandelbrotConfig_MandelbrotRunArgs_MandelbrotColorScheme_Name(enum_t_value);
  }
  static inline bool MandelbrotColorScheme_Parse(const std::string& name,
      MandelbrotColorScheme* value) {
    return MandelbrotConfig_MandelbrotRunArgs_MandelbrotColorScheme_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kOutFilenameFieldNumber = 1,
    kColorSchemeFieldNumber = 2,
    kSingleColorSchemeArgsFieldNumber = 3,
  };
  // string out_filename = 1;
  void clear_out_filename();
  const std::string& out_filename() const;
  void set_out_filename(const std::string& value);
  void set_out_filename(std::string&& value);
  void set_out_filename(const char* value);
  void set_out_filename(const char* value, size_t size);
  std::string* mutable_out_filename();
  std::string* release_out_filename();
  void set_allocated_out_filename(std::string* out_filename);
  private:
  const std::string& _internal_out_filename() const;
  void _internal_set_out_filename(const std::string& value);
  std::string* _internal_mutable_out_filename();
  public:

  // .bmp_grapher_proto.MandelbrotConfig.MandelbrotRunArgs.MandelbrotColorScheme color_scheme = 2;
  void clear_color_scheme();
  ::bmp_grapher_proto::MandelbrotConfig_MandelbrotRunArgs_MandelbrotColorScheme color_scheme() const;
  void set_color_scheme(::bmp_grapher_proto::MandelbrotConfig_MandelbrotRunArgs_MandelbrotColorScheme value);
  private:
  ::bmp_grapher_proto::MandelbrotConfig_MandelbrotRunArgs_MandelbrotColorScheme _internal_color_scheme() const;
  void _internal_set_color_scheme(::bmp_grapher_proto::MandelbrotConfig_MandelbrotRunArgs_MandelbrotColorScheme value);
  public:

  // .bmp_grapher_proto.MandelbrotConfig.MandelbrotRunArgs.SingleColorSchemeArgs single_color_scheme_args = 3;
  bool has_single_color_scheme_args() const;
  private:
  bool _internal_has_single_color_scheme_args() const;
  public:
  void clear_single_color_scheme_args();
  const ::bmp_grapher_proto::MandelbrotConfig_MandelbrotRunArgs_SingleColorSchemeArgs& single_color_scheme_args() const;
  ::bmp_grapher_proto::MandelbrotConfig_MandelbrotRunArgs_SingleColorSchemeArgs* release_single_color_scheme_args();
  ::bmp_grapher_proto::MandelbrotConfig_MandelbrotRunArgs_SingleColorSchemeArgs* mutable_single_color_scheme_args();
  void set_allocated_single_color_scheme_args(::bmp_grapher_proto::MandelbrotConfig_MandelbrotRunArgs_SingleColorSchemeArgs* single_color_scheme_args);
  private:
  const ::bmp_grapher_proto::MandelbrotConfig_MandelbrotRunArgs_SingleColorSchemeArgs& _internal_single_color_scheme_args() const;
  ::bmp_grapher_proto::MandelbrotConfig_MandelbrotRunArgs_SingleColorSchemeArgs* _internal_mutable_single_color_scheme_args();
  public:

  void clear_color_scheme_args();
  ColorSchemeArgsCase color_scheme_args_case() const;
  // @@protoc_insertion_point(class_scope:bmp_grapher_proto.MandelbrotConfig.MandelbrotRunArgs)
 private:
  class _Internal;
  void set_has_single_color_scheme_args();

  inline bool has_color_scheme_args() const;
  inline void clear_has_color_scheme_args();

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr out_filename_;
  int color_scheme_;
  union ColorSchemeArgsUnion {
    ColorSchemeArgsUnion() {}
    ::bmp_grapher_proto::MandelbrotConfig_MandelbrotRunArgs_SingleColorSchemeArgs* single_color_scheme_args_;
  } color_scheme_args_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_bmp_5fgrapher_2eproto;
};
// -------------------------------------------------------------------

class MandelbrotConfig :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bmp_grapher_proto.MandelbrotConfig) */ {
 public:
  MandelbrotConfig();
  virtual ~MandelbrotConfig();

  MandelbrotConfig(const MandelbrotConfig& from);
  MandelbrotConfig(MandelbrotConfig&& from) noexcept
    : MandelbrotConfig() {
    *this = ::std::move(from);
  }

  inline MandelbrotConfig& operator=(const MandelbrotConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline MandelbrotConfig& operator=(MandelbrotConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MandelbrotConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MandelbrotConfig* internal_default_instance() {
    return reinterpret_cast<const MandelbrotConfig*>(
               &_MandelbrotConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(MandelbrotConfig& a, MandelbrotConfig& b) {
    a.Swap(&b);
  }
  inline void Swap(MandelbrotConfig* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MandelbrotConfig* New() const final {
    return CreateMaybeMessage<MandelbrotConfig>(nullptr);
  }

  MandelbrotConfig* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MandelbrotConfig>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MandelbrotConfig& from);
  void MergeFrom(const MandelbrotConfig& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MandelbrotConfig* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bmp_grapher_proto.MandelbrotConfig";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bmp_5fgrapher_2eproto);
    return ::descriptor_table_bmp_5fgrapher_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef MandelbrotConfig_MandelbrotRunArgs MandelbrotRunArgs;

  // accessors -------------------------------------------------------

  enum : int {
    kRunArgsFieldNumber = 2,
    kMaxIterationsFieldNumber = 1,
  };
  // repeated .bmp_grapher_proto.MandelbrotConfig.MandelbrotRunArgs run_args = 2;
  int run_args_size() const;
  private:
  int _internal_run_args_size() const;
  public:
  void clear_run_args();
  ::bmp_grapher_proto::MandelbrotConfig_MandelbrotRunArgs* mutable_run_args(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bmp_grapher_proto::MandelbrotConfig_MandelbrotRunArgs >*
      mutable_run_args();
  private:
  const ::bmp_grapher_proto::MandelbrotConfig_MandelbrotRunArgs& _internal_run_args(int index) const;
  ::bmp_grapher_proto::MandelbrotConfig_MandelbrotRunArgs* _internal_add_run_args();
  public:
  const ::bmp_grapher_proto::MandelbrotConfig_MandelbrotRunArgs& run_args(int index) const;
  ::bmp_grapher_proto::MandelbrotConfig_MandelbrotRunArgs* add_run_args();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bmp_grapher_proto::MandelbrotConfig_MandelbrotRunArgs >&
      run_args() const;

  // int32 max_iterations = 1;
  void clear_max_iterations();
  ::PROTOBUF_NAMESPACE_ID::int32 max_iterations() const;
  void set_max_iterations(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_max_iterations() const;
  void _internal_set_max_iterations(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:bmp_grapher_proto.MandelbrotConfig)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bmp_grapher_proto::MandelbrotConfig_MandelbrotRunArgs > run_args_;
  ::PROTOBUF_NAMESPACE_ID::int32 max_iterations_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_bmp_5fgrapher_2eproto;
};
// -------------------------------------------------------------------

class QuadraticConfig_QuadraticRunArgs_DualColorSchemeArgs :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bmp_grapher_proto.QuadraticConfig.QuadraticRunArgs.DualColorSchemeArgs) */ {
 public:
  QuadraticConfig_QuadraticRunArgs_DualColorSchemeArgs();
  virtual ~QuadraticConfig_QuadraticRunArgs_DualColorSchemeArgs();

  QuadraticConfig_QuadraticRunArgs_DualColorSchemeArgs(const QuadraticConfig_QuadraticRunArgs_DualColorSchemeArgs& from);
  QuadraticConfig_QuadraticRunArgs_DualColorSchemeArgs(QuadraticConfig_QuadraticRunArgs_DualColorSchemeArgs&& from) noexcept
    : QuadraticConfig_QuadraticRunArgs_DualColorSchemeArgs() {
    *this = ::std::move(from);
  }

  inline QuadraticConfig_QuadraticRunArgs_DualColorSchemeArgs& operator=(const QuadraticConfig_QuadraticRunArgs_DualColorSchemeArgs& from) {
    CopyFrom(from);
    return *this;
  }
  inline QuadraticConfig_QuadraticRunArgs_DualColorSchemeArgs& operator=(QuadraticConfig_QuadraticRunArgs_DualColorSchemeArgs&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const QuadraticConfig_QuadraticRunArgs_DualColorSchemeArgs& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const QuadraticConfig_QuadraticRunArgs_DualColorSchemeArgs* internal_default_instance() {
    return reinterpret_cast<const QuadraticConfig_QuadraticRunArgs_DualColorSchemeArgs*>(
               &_QuadraticConfig_QuadraticRunArgs_DualColorSchemeArgs_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(QuadraticConfig_QuadraticRunArgs_DualColorSchemeArgs& a, QuadraticConfig_QuadraticRunArgs_DualColorSchemeArgs& b) {
    a.Swap(&b);
  }
  inline void Swap(QuadraticConfig_QuadraticRunArgs_DualColorSchemeArgs* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline QuadraticConfig_QuadraticRunArgs_DualColorSchemeArgs* New() const final {
    return CreateMaybeMessage<QuadraticConfig_QuadraticRunArgs_DualColorSchemeArgs>(nullptr);
  }

  QuadraticConfig_QuadraticRunArgs_DualColorSchemeArgs* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<QuadraticConfig_QuadraticRunArgs_DualColorSchemeArgs>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const QuadraticConfig_QuadraticRunArgs_DualColorSchemeArgs& from);
  void MergeFrom(const QuadraticConfig_QuadraticRunArgs_DualColorSchemeArgs& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QuadraticConfig_QuadraticRunArgs_DualColorSchemeArgs* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bmp_grapher_proto.QuadraticConfig.QuadraticRunArgs.DualColorSchemeArgs";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bmp_5fgrapher_2eproto);
    return ::descriptor_table_bmp_5fgrapher_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBackgroundColorFieldNumber = 2,
    kCurveColorFieldNumber = 3,
    kMaxDistanceFieldNumber = 1,
  };
  // .bmp_grapher_proto.RGB background_color = 2;
  bool has_background_color() const;
  private:
  bool _internal_has_background_color() const;
  public:
  void clear_background_color();
  const ::bmp_grapher_proto::RGB& background_color() const;
  ::bmp_grapher_proto::RGB* release_background_color();
  ::bmp_grapher_proto::RGB* mutable_background_color();
  void set_allocated_background_color(::bmp_grapher_proto::RGB* background_color);
  private:
  const ::bmp_grapher_proto::RGB& _internal_background_color() const;
  ::bmp_grapher_proto::RGB* _internal_mutable_background_color();
  public:

  // .bmp_grapher_proto.RGB curve_color = 3;
  bool has_curve_color() const;
  private:
  bool _internal_has_curve_color() const;
  public:
  void clear_curve_color();
  const ::bmp_grapher_proto::RGB& curve_color() const;
  ::bmp_grapher_proto::RGB* release_curve_color();
  ::bmp_grapher_proto::RGB* mutable_curve_color();
  void set_allocated_curve_color(::bmp_grapher_proto::RGB* curve_color);
  private:
  const ::bmp_grapher_proto::RGB& _internal_curve_color() const;
  ::bmp_grapher_proto::RGB* _internal_mutable_curve_color();
  public:

  // double max_distance = 1;
  void clear_max_distance();
  double max_distance() const;
  void set_max_distance(double value);
  private:
  double _internal_max_distance() const;
  void _internal_set_max_distance(double value);
  public:

  // @@protoc_insertion_point(class_scope:bmp_grapher_proto.QuadraticConfig.QuadraticRunArgs.DualColorSchemeArgs)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::bmp_grapher_proto::RGB* background_color_;
  ::bmp_grapher_proto::RGB* curve_color_;
  double max_distance_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_bmp_5fgrapher_2eproto;
};
// -------------------------------------------------------------------

class QuadraticConfig_QuadraticRunArgs :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bmp_grapher_proto.QuadraticConfig.QuadraticRunArgs) */ {
 public:
  QuadraticConfig_QuadraticRunArgs();
  virtual ~QuadraticConfig_QuadraticRunArgs();

  QuadraticConfig_QuadraticRunArgs(const QuadraticConfig_QuadraticRunArgs& from);
  QuadraticConfig_QuadraticRunArgs(QuadraticConfig_QuadraticRunArgs&& from) noexcept
    : QuadraticConfig_QuadraticRunArgs() {
    *this = ::std::move(from);
  }

  inline QuadraticConfig_QuadraticRunArgs& operator=(const QuadraticConfig_QuadraticRunArgs& from) {
    CopyFrom(from);
    return *this;
  }
  inline QuadraticConfig_QuadraticRunArgs& operator=(QuadraticConfig_QuadraticRunArgs&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const QuadraticConfig_QuadraticRunArgs& default_instance();

  enum ColorSchemeArgsCase {
    kDualColorSchemeArgs = 3,
    COLOR_SCHEME_ARGS_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const QuadraticConfig_QuadraticRunArgs* internal_default_instance() {
    return reinterpret_cast<const QuadraticConfig_QuadraticRunArgs*>(
               &_QuadraticConfig_QuadraticRunArgs_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(QuadraticConfig_QuadraticRunArgs& a, QuadraticConfig_QuadraticRunArgs& b) {
    a.Swap(&b);
  }
  inline void Swap(QuadraticConfig_QuadraticRunArgs* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline QuadraticConfig_QuadraticRunArgs* New() const final {
    return CreateMaybeMessage<QuadraticConfig_QuadraticRunArgs>(nullptr);
  }

  QuadraticConfig_QuadraticRunArgs* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<QuadraticConfig_QuadraticRunArgs>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const QuadraticConfig_QuadraticRunArgs& from);
  void MergeFrom(const QuadraticConfig_QuadraticRunArgs& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QuadraticConfig_QuadraticRunArgs* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bmp_grapher_proto.QuadraticConfig.QuadraticRunArgs";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bmp_5fgrapher_2eproto);
    return ::descriptor_table_bmp_5fgrapher_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef QuadraticConfig_QuadraticRunArgs_DualColorSchemeArgs DualColorSchemeArgs;

  typedef QuadraticConfig_QuadraticRunArgs_QuadraticColorScheme QuadraticColorScheme;
  static constexpr QuadraticColorScheme DUAL =
    QuadraticConfig_QuadraticRunArgs_QuadraticColorScheme_DUAL;
  static inline bool QuadraticColorScheme_IsValid(int value) {
    return QuadraticConfig_QuadraticRunArgs_QuadraticColorScheme_IsValid(value);
  }
  static constexpr QuadraticColorScheme QuadraticColorScheme_MIN =
    QuadraticConfig_QuadraticRunArgs_QuadraticColorScheme_QuadraticColorScheme_MIN;
  static constexpr QuadraticColorScheme QuadraticColorScheme_MAX =
    QuadraticConfig_QuadraticRunArgs_QuadraticColorScheme_QuadraticColorScheme_MAX;
  static constexpr int QuadraticColorScheme_ARRAYSIZE =
    QuadraticConfig_QuadraticRunArgs_QuadraticColorScheme_QuadraticColorScheme_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  QuadraticColorScheme_descriptor() {
    return QuadraticConfig_QuadraticRunArgs_QuadraticColorScheme_descriptor();
  }
  template<typename T>
  static inline const std::string& QuadraticColorScheme_Name(T enum_t_value) {
    static_assert(::std::is_same<T, QuadraticColorScheme>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function QuadraticColorScheme_Name.");
    return QuadraticConfig_QuadraticRunArgs_QuadraticColorScheme_Name(enum_t_value);
  }
  static inline bool QuadraticColorScheme_Parse(const std::string& name,
      QuadraticColorScheme* value) {
    return QuadraticConfig_QuadraticRunArgs_QuadraticColorScheme_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kOutFilenameFieldNumber = 1,
    kColorSchemeFieldNumber = 2,
    kDualColorSchemeArgsFieldNumber = 3,
  };
  // string out_filename = 1;
  void clear_out_filename();
  const std::string& out_filename() const;
  void set_out_filename(const std::string& value);
  void set_out_filename(std::string&& value);
  void set_out_filename(const char* value);
  void set_out_filename(const char* value, size_t size);
  std::string* mutable_out_filename();
  std::string* release_out_filename();
  void set_allocated_out_filename(std::string* out_filename);
  private:
  const std::string& _internal_out_filename() const;
  void _internal_set_out_filename(const std::string& value);
  std::string* _internal_mutable_out_filename();
  public:

  // .bmp_grapher_proto.QuadraticConfig.QuadraticRunArgs.QuadraticColorScheme color_scheme = 2;
  void clear_color_scheme();
  ::bmp_grapher_proto::QuadraticConfig_QuadraticRunArgs_QuadraticColorScheme color_scheme() const;
  void set_color_scheme(::bmp_grapher_proto::QuadraticConfig_QuadraticRunArgs_QuadraticColorScheme value);
  private:
  ::bmp_grapher_proto::QuadraticConfig_QuadraticRunArgs_QuadraticColorScheme _internal_color_scheme() const;
  void _internal_set_color_scheme(::bmp_grapher_proto::QuadraticConfig_QuadraticRunArgs_QuadraticColorScheme value);
  public:

  // .bmp_grapher_proto.QuadraticConfig.QuadraticRunArgs.DualColorSchemeArgs dual_color_scheme_args = 3;
  bool has_dual_color_scheme_args() const;
  private:
  bool _internal_has_dual_color_scheme_args() const;
  public:
  void clear_dual_color_scheme_args();
  const ::bmp_grapher_proto::QuadraticConfig_QuadraticRunArgs_DualColorSchemeArgs& dual_color_scheme_args() const;
  ::bmp_grapher_proto::QuadraticConfig_QuadraticRunArgs_DualColorSchemeArgs* release_dual_color_scheme_args();
  ::bmp_grapher_proto::QuadraticConfig_QuadraticRunArgs_DualColorSchemeArgs* mutable_dual_color_scheme_args();
  void set_allocated_dual_color_scheme_args(::bmp_grapher_proto::QuadraticConfig_QuadraticRunArgs_DualColorSchemeArgs* dual_color_scheme_args);
  private:
  const ::bmp_grapher_proto::QuadraticConfig_QuadraticRunArgs_DualColorSchemeArgs& _internal_dual_color_scheme_args() const;
  ::bmp_grapher_proto::QuadraticConfig_QuadraticRunArgs_DualColorSchemeArgs* _internal_mutable_dual_color_scheme_args();
  public:

  void clear_color_scheme_args();
  ColorSchemeArgsCase color_scheme_args_case() const;
  // @@protoc_insertion_point(class_scope:bmp_grapher_proto.QuadraticConfig.QuadraticRunArgs)
 private:
  class _Internal;
  void set_has_dual_color_scheme_args();

  inline bool has_color_scheme_args() const;
  inline void clear_has_color_scheme_args();

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr out_filename_;
  int color_scheme_;
  union ColorSchemeArgsUnion {
    ColorSchemeArgsUnion() {}
    ::bmp_grapher_proto::QuadraticConfig_QuadraticRunArgs_DualColorSchemeArgs* dual_color_scheme_args_;
  } color_scheme_args_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_bmp_5fgrapher_2eproto;
};
// -------------------------------------------------------------------

class QuadraticConfig :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bmp_grapher_proto.QuadraticConfig) */ {
 public:
  QuadraticConfig();
  virtual ~QuadraticConfig();

  QuadraticConfig(const QuadraticConfig& from);
  QuadraticConfig(QuadraticConfig&& from) noexcept
    : QuadraticConfig() {
    *this = ::std::move(from);
  }

  inline QuadraticConfig& operator=(const QuadraticConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline QuadraticConfig& operator=(QuadraticConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const QuadraticConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const QuadraticConfig* internal_default_instance() {
    return reinterpret_cast<const QuadraticConfig*>(
               &_QuadraticConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(QuadraticConfig& a, QuadraticConfig& b) {
    a.Swap(&b);
  }
  inline void Swap(QuadraticConfig* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline QuadraticConfig* New() const final {
    return CreateMaybeMessage<QuadraticConfig>(nullptr);
  }

  QuadraticConfig* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<QuadraticConfig>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const QuadraticConfig& from);
  void MergeFrom(const QuadraticConfig& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QuadraticConfig* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bmp_grapher_proto.QuadraticConfig";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bmp_5fgrapher_2eproto);
    return ::descriptor_table_bmp_5fgrapher_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef QuadraticConfig_QuadraticRunArgs QuadraticRunArgs;

  // accessors -------------------------------------------------------

  enum : int {
    kRunArgsFieldNumber = 4,
    kParamAFieldNumber = 1,
    kParamBFieldNumber = 2,
    kParamCFieldNumber = 3,
  };
  // repeated .bmp_grapher_proto.QuadraticConfig.QuadraticRunArgs run_args = 4;
  int run_args_size() const;
  private:
  int _internal_run_args_size() const;
  public:
  void clear_run_args();
  ::bmp_grapher_proto::QuadraticConfig_QuadraticRunArgs* mutable_run_args(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bmp_grapher_proto::QuadraticConfig_QuadraticRunArgs >*
      mutable_run_args();
  private:
  const ::bmp_grapher_proto::QuadraticConfig_QuadraticRunArgs& _internal_run_args(int index) const;
  ::bmp_grapher_proto::QuadraticConfig_QuadraticRunArgs* _internal_add_run_args();
  public:
  const ::bmp_grapher_proto::QuadraticConfig_QuadraticRunArgs& run_args(int index) const;
  ::bmp_grapher_proto::QuadraticConfig_QuadraticRunArgs* add_run_args();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bmp_grapher_proto::QuadraticConfig_QuadraticRunArgs >&
      run_args() const;

  // double param_a = 1;
  void clear_param_a();
  double param_a() const;
  void set_param_a(double value);
  private:
  double _internal_param_a() const;
  void _internal_set_param_a(double value);
  public:

  // double param_b = 2;
  void clear_param_b();
  double param_b() const;
  void set_param_b(double value);
  private:
  double _internal_param_b() const;
  void _internal_set_param_b(double value);
  public:

  // double param_c = 3;
  void clear_param_c();
  double param_c() const;
  void set_param_c(double value);
  private:
  double _internal_param_c() const;
  void _internal_set_param_c(double value);
  public:

  // @@protoc_insertion_point(class_scope:bmp_grapher_proto.QuadraticConfig)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bmp_grapher_proto::QuadraticConfig_QuadraticRunArgs > run_args_;
  double param_a_;
  double param_b_;
  double param_c_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_bmp_5fgrapher_2eproto;
};
// -------------------------------------------------------------------

class BmpGrapher :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bmp_grapher_proto.BmpGrapher) */ {
 public:
  BmpGrapher();
  virtual ~BmpGrapher();

  BmpGrapher(const BmpGrapher& from);
  BmpGrapher(BmpGrapher&& from) noexcept
    : BmpGrapher() {
    *this = ::std::move(from);
  }

  inline BmpGrapher& operator=(const BmpGrapher& from) {
    CopyFrom(from);
    return *this;
  }
  inline BmpGrapher& operator=(BmpGrapher&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const BmpGrapher& default_instance();

  enum BmpGrapherConfigCase {
    kMandelbrotConfig = 6,
    kQuadraticConfig = 7,
    BMP_GRAPHER_CONFIG_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BmpGrapher* internal_default_instance() {
    return reinterpret_cast<const BmpGrapher*>(
               &_BmpGrapher_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(BmpGrapher& a, BmpGrapher& b) {
    a.Swap(&b);
  }
  inline void Swap(BmpGrapher* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline BmpGrapher* New() const final {
    return CreateMaybeMessage<BmpGrapher>(nullptr);
  }

  BmpGrapher* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<BmpGrapher>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const BmpGrapher& from);
  void MergeFrom(const BmpGrapher& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BmpGrapher* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bmp_grapher_proto.BmpGrapher";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bmp_5fgrapher_2eproto);
    return ::descriptor_table_bmp_5fgrapher_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXCenterFieldNumber = 1,
    kYCenterFieldNumber = 2,
    kXDomainWidthFieldNumber = 3,
    kPixelWidthFieldNumber = 4,
    kPixelHeightFieldNumber = 5,
    kMandelbrotConfigFieldNumber = 6,
    kQuadraticConfigFieldNumber = 7,
  };
  // double x_center = 1;
  void clear_x_center();
  double x_center() const;
  void set_x_center(double value);
  private:
  double _internal_x_center() const;
  void _internal_set_x_center(double value);
  public:

  // double y_center = 2;
  void clear_y_center();
  double y_center() const;
  void set_y_center(double value);
  private:
  double _internal_y_center() const;
  void _internal_set_y_center(double value);
  public:

  // double x_domain_width = 3;
  void clear_x_domain_width();
  double x_domain_width() const;
  void set_x_domain_width(double value);
  private:
  double _internal_x_domain_width() const;
  void _internal_set_x_domain_width(double value);
  public:

  // int32 pixel_width = 4;
  void clear_pixel_width();
  ::PROTOBUF_NAMESPACE_ID::int32 pixel_width() const;
  void set_pixel_width(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_pixel_width() const;
  void _internal_set_pixel_width(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 pixel_height = 5;
  void clear_pixel_height();
  ::PROTOBUF_NAMESPACE_ID::int32 pixel_height() const;
  void set_pixel_height(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_pixel_height() const;
  void _internal_set_pixel_height(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // .bmp_grapher_proto.MandelbrotConfig mandelbrot_config = 6;
  bool has_mandelbrot_config() const;
  private:
  bool _internal_has_mandelbrot_config() const;
  public:
  void clear_mandelbrot_config();
  const ::bmp_grapher_proto::MandelbrotConfig& mandelbrot_config() const;
  ::bmp_grapher_proto::MandelbrotConfig* release_mandelbrot_config();
  ::bmp_grapher_proto::MandelbrotConfig* mutable_mandelbrot_config();
  void set_allocated_mandelbrot_config(::bmp_grapher_proto::MandelbrotConfig* mandelbrot_config);
  private:
  const ::bmp_grapher_proto::MandelbrotConfig& _internal_mandelbrot_config() const;
  ::bmp_grapher_proto::MandelbrotConfig* _internal_mutable_mandelbrot_config();
  public:

  // .bmp_grapher_proto.QuadraticConfig quadratic_config = 7;
  bool has_quadratic_config() const;
  private:
  bool _internal_has_quadratic_config() const;
  public:
  void clear_quadratic_config();
  const ::bmp_grapher_proto::QuadraticConfig& quadratic_config() const;
  ::bmp_grapher_proto::QuadraticConfig* release_quadratic_config();
  ::bmp_grapher_proto::QuadraticConfig* mutable_quadratic_config();
  void set_allocated_quadratic_config(::bmp_grapher_proto::QuadraticConfig* quadratic_config);
  private:
  const ::bmp_grapher_proto::QuadraticConfig& _internal_quadratic_config() const;
  ::bmp_grapher_proto::QuadraticConfig* _internal_mutable_quadratic_config();
  public:

  void clear_bmp_grapher_config();
  BmpGrapherConfigCase bmp_grapher_config_case() const;
  // @@protoc_insertion_point(class_scope:bmp_grapher_proto.BmpGrapher)
 private:
  class _Internal;
  void set_has_mandelbrot_config();
  void set_has_quadratic_config();

  inline bool has_bmp_grapher_config() const;
  inline void clear_has_bmp_grapher_config();

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  double x_center_;
  double y_center_;
  double x_domain_width_;
  ::PROTOBUF_NAMESPACE_ID::int32 pixel_width_;
  ::PROTOBUF_NAMESPACE_ID::int32 pixel_height_;
  union BmpGrapherConfigUnion {
    BmpGrapherConfigUnion() {}
    ::bmp_grapher_proto::MandelbrotConfig* mandelbrot_config_;
    ::bmp_grapher_proto::QuadraticConfig* quadratic_config_;
  } bmp_grapher_config_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_bmp_5fgrapher_2eproto;
};
// -------------------------------------------------------------------

class BmpGrapherFactory :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:bmp_grapher_proto.BmpGrapherFactory) */ {
 public:
  BmpGrapherFactory();
  virtual ~BmpGrapherFactory();

  BmpGrapherFactory(const BmpGrapherFactory& from);
  BmpGrapherFactory(BmpGrapherFactory&& from) noexcept
    : BmpGrapherFactory() {
    *this = ::std::move(from);
  }

  inline BmpGrapherFactory& operator=(const BmpGrapherFactory& from) {
    CopyFrom(from);
    return *this;
  }
  inline BmpGrapherFactory& operator=(BmpGrapherFactory&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const BmpGrapherFactory& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BmpGrapherFactory* internal_default_instance() {
    return reinterpret_cast<const BmpGrapherFactory*>(
               &_BmpGrapherFactory_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(BmpGrapherFactory& a, BmpGrapherFactory& b) {
    a.Swap(&b);
  }
  inline void Swap(BmpGrapherFactory* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline BmpGrapherFactory* New() const final {
    return CreateMaybeMessage<BmpGrapherFactory>(nullptr);
  }

  BmpGrapherFactory* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<BmpGrapherFactory>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const BmpGrapherFactory& from);
  void MergeFrom(const BmpGrapherFactory& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BmpGrapherFactory* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "bmp_grapher_proto.BmpGrapherFactory";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_bmp_5fgrapher_2eproto);
    return ::descriptor_table_bmp_5fgrapher_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBitmapsFieldNumber = 1,
  };
  // repeated .bmp_grapher_proto.BmpGrapher bitmaps = 1;
  int bitmaps_size() const;
  private:
  int _internal_bitmaps_size() const;
  public:
  void clear_bitmaps();
  ::bmp_grapher_proto::BmpGrapher* mutable_bitmaps(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bmp_grapher_proto::BmpGrapher >*
      mutable_bitmaps();
  private:
  const ::bmp_grapher_proto::BmpGrapher& _internal_bitmaps(int index) const;
  ::bmp_grapher_proto::BmpGrapher* _internal_add_bitmaps();
  public:
  const ::bmp_grapher_proto::BmpGrapher& bitmaps(int index) const;
  ::bmp_grapher_proto::BmpGrapher* add_bitmaps();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bmp_grapher_proto::BmpGrapher >&
      bitmaps() const;

  // @@protoc_insertion_point(class_scope:bmp_grapher_proto.BmpGrapherFactory)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bmp_grapher_proto::BmpGrapher > bitmaps_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_bmp_5fgrapher_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// RGB

// int32 red = 1;
inline void RGB::clear_red() {
  red_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RGB::_internal_red() const {
  return red_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RGB::red() const {
  // @@protoc_insertion_point(field_get:bmp_grapher_proto.RGB.red)
  return _internal_red();
}
inline void RGB::_internal_set_red(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  red_ = value;
}
inline void RGB::set_red(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_red(value);
  // @@protoc_insertion_point(field_set:bmp_grapher_proto.RGB.red)
}

// int32 green = 2;
inline void RGB::clear_green() {
  green_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RGB::_internal_green() const {
  return green_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RGB::green() const {
  // @@protoc_insertion_point(field_get:bmp_grapher_proto.RGB.green)
  return _internal_green();
}
inline void RGB::_internal_set_green(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  green_ = value;
}
inline void RGB::set_green(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_green(value);
  // @@protoc_insertion_point(field_set:bmp_grapher_proto.RGB.green)
}

// int32 blue = 3;
inline void RGB::clear_blue() {
  blue_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RGB::_internal_blue() const {
  return blue_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RGB::blue() const {
  // @@protoc_insertion_point(field_get:bmp_grapher_proto.RGB.blue)
  return _internal_blue();
}
inline void RGB::_internal_set_blue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  blue_ = value;
}
inline void RGB::set_blue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_blue(value);
  // @@protoc_insertion_point(field_set:bmp_grapher_proto.RGB.blue)
}

// -------------------------------------------------------------------

// MandelbrotConfig_MandelbrotRunArgs_SingleColorSchemeArgs

// .bmp_grapher_proto.RGB mandelbrot_color = 1;
inline bool MandelbrotConfig_MandelbrotRunArgs_SingleColorSchemeArgs::_internal_has_mandelbrot_color() const {
  return this != internal_default_instance() && mandelbrot_color_ != nullptr;
}
inline bool MandelbrotConfig_MandelbrotRunArgs_SingleColorSchemeArgs::has_mandelbrot_color() const {
  return _internal_has_mandelbrot_color();
}
inline void MandelbrotConfig_MandelbrotRunArgs_SingleColorSchemeArgs::clear_mandelbrot_color() {
  if (GetArenaNoVirtual() == nullptr && mandelbrot_color_ != nullptr) {
    delete mandelbrot_color_;
  }
  mandelbrot_color_ = nullptr;
}
inline const ::bmp_grapher_proto::RGB& MandelbrotConfig_MandelbrotRunArgs_SingleColorSchemeArgs::_internal_mandelbrot_color() const {
  const ::bmp_grapher_proto::RGB* p = mandelbrot_color_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bmp_grapher_proto::RGB*>(
      &::bmp_grapher_proto::_RGB_default_instance_);
}
inline const ::bmp_grapher_proto::RGB& MandelbrotConfig_MandelbrotRunArgs_SingleColorSchemeArgs::mandelbrot_color() const {
  // @@protoc_insertion_point(field_get:bmp_grapher_proto.MandelbrotConfig.MandelbrotRunArgs.SingleColorSchemeArgs.mandelbrot_color)
  return _internal_mandelbrot_color();
}
inline ::bmp_grapher_proto::RGB* MandelbrotConfig_MandelbrotRunArgs_SingleColorSchemeArgs::release_mandelbrot_color() {
  // @@protoc_insertion_point(field_release:bmp_grapher_proto.MandelbrotConfig.MandelbrotRunArgs.SingleColorSchemeArgs.mandelbrot_color)
  
  ::bmp_grapher_proto::RGB* temp = mandelbrot_color_;
  mandelbrot_color_ = nullptr;
  return temp;
}
inline ::bmp_grapher_proto::RGB* MandelbrotConfig_MandelbrotRunArgs_SingleColorSchemeArgs::_internal_mutable_mandelbrot_color() {
  
  if (mandelbrot_color_ == nullptr) {
    auto* p = CreateMaybeMessage<::bmp_grapher_proto::RGB>(GetArenaNoVirtual());
    mandelbrot_color_ = p;
  }
  return mandelbrot_color_;
}
inline ::bmp_grapher_proto::RGB* MandelbrotConfig_MandelbrotRunArgs_SingleColorSchemeArgs::mutable_mandelbrot_color() {
  // @@protoc_insertion_point(field_mutable:bmp_grapher_proto.MandelbrotConfig.MandelbrotRunArgs.SingleColorSchemeArgs.mandelbrot_color)
  return _internal_mutable_mandelbrot_color();
}
inline void MandelbrotConfig_MandelbrotRunArgs_SingleColorSchemeArgs::set_allocated_mandelbrot_color(::bmp_grapher_proto::RGB* mandelbrot_color) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete mandelbrot_color_;
  }
  if (mandelbrot_color) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      mandelbrot_color = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mandelbrot_color, submessage_arena);
    }
    
  } else {
    
  }
  mandelbrot_color_ = mandelbrot_color;
  // @@protoc_insertion_point(field_set_allocated:bmp_grapher_proto.MandelbrotConfig.MandelbrotRunArgs.SingleColorSchemeArgs.mandelbrot_color)
}

// .bmp_grapher_proto.RGB base_color = 2;
inline bool MandelbrotConfig_MandelbrotRunArgs_SingleColorSchemeArgs::_internal_has_base_color() const {
  return this != internal_default_instance() && base_color_ != nullptr;
}
inline bool MandelbrotConfig_MandelbrotRunArgs_SingleColorSchemeArgs::has_base_color() const {
  return _internal_has_base_color();
}
inline void MandelbrotConfig_MandelbrotRunArgs_SingleColorSchemeArgs::clear_base_color() {
  if (GetArenaNoVirtual() == nullptr && base_color_ != nullptr) {
    delete base_color_;
  }
  base_color_ = nullptr;
}
inline const ::bmp_grapher_proto::RGB& MandelbrotConfig_MandelbrotRunArgs_SingleColorSchemeArgs::_internal_base_color() const {
  const ::bmp_grapher_proto::RGB* p = base_color_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bmp_grapher_proto::RGB*>(
      &::bmp_grapher_proto::_RGB_default_instance_);
}
inline const ::bmp_grapher_proto::RGB& MandelbrotConfig_MandelbrotRunArgs_SingleColorSchemeArgs::base_color() const {
  // @@protoc_insertion_point(field_get:bmp_grapher_proto.MandelbrotConfig.MandelbrotRunArgs.SingleColorSchemeArgs.base_color)
  return _internal_base_color();
}
inline ::bmp_grapher_proto::RGB* MandelbrotConfig_MandelbrotRunArgs_SingleColorSchemeArgs::release_base_color() {
  // @@protoc_insertion_point(field_release:bmp_grapher_proto.MandelbrotConfig.MandelbrotRunArgs.SingleColorSchemeArgs.base_color)
  
  ::bmp_grapher_proto::RGB* temp = base_color_;
  base_color_ = nullptr;
  return temp;
}
inline ::bmp_grapher_proto::RGB* MandelbrotConfig_MandelbrotRunArgs_SingleColorSchemeArgs::_internal_mutable_base_color() {
  
  if (base_color_ == nullptr) {
    auto* p = CreateMaybeMessage<::bmp_grapher_proto::RGB>(GetArenaNoVirtual());
    base_color_ = p;
  }
  return base_color_;
}
inline ::bmp_grapher_proto::RGB* MandelbrotConfig_MandelbrotRunArgs_SingleColorSchemeArgs::mutable_base_color() {
  // @@protoc_insertion_point(field_mutable:bmp_grapher_proto.MandelbrotConfig.MandelbrotRunArgs.SingleColorSchemeArgs.base_color)
  return _internal_mutable_base_color();
}
inline void MandelbrotConfig_MandelbrotRunArgs_SingleColorSchemeArgs::set_allocated_base_color(::bmp_grapher_proto::RGB* base_color) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete base_color_;
  }
  if (base_color) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      base_color = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, base_color, submessage_arena);
    }
    
  } else {
    
  }
  base_color_ = base_color;
  // @@protoc_insertion_point(field_set_allocated:bmp_grapher_proto.MandelbrotConfig.MandelbrotRunArgs.SingleColorSchemeArgs.base_color)
}

// -------------------------------------------------------------------

// MandelbrotConfig_MandelbrotRunArgs

// string out_filename = 1;
inline void MandelbrotConfig_MandelbrotRunArgs::clear_out_filename() {
  out_filename_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& MandelbrotConfig_MandelbrotRunArgs::out_filename() const {
  // @@protoc_insertion_point(field_get:bmp_grapher_proto.MandelbrotConfig.MandelbrotRunArgs.out_filename)
  return _internal_out_filename();
}
inline void MandelbrotConfig_MandelbrotRunArgs::set_out_filename(const std::string& value) {
  _internal_set_out_filename(value);
  // @@protoc_insertion_point(field_set:bmp_grapher_proto.MandelbrotConfig.MandelbrotRunArgs.out_filename)
}
inline std::string* MandelbrotConfig_MandelbrotRunArgs::mutable_out_filename() {
  // @@protoc_insertion_point(field_mutable:bmp_grapher_proto.MandelbrotConfig.MandelbrotRunArgs.out_filename)
  return _internal_mutable_out_filename();
}
inline const std::string& MandelbrotConfig_MandelbrotRunArgs::_internal_out_filename() const {
  return out_filename_.GetNoArena();
}
inline void MandelbrotConfig_MandelbrotRunArgs::_internal_set_out_filename(const std::string& value) {
  
  out_filename_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MandelbrotConfig_MandelbrotRunArgs::set_out_filename(std::string&& value) {
  
  out_filename_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bmp_grapher_proto.MandelbrotConfig.MandelbrotRunArgs.out_filename)
}
inline void MandelbrotConfig_MandelbrotRunArgs::set_out_filename(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  out_filename_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bmp_grapher_proto.MandelbrotConfig.MandelbrotRunArgs.out_filename)
}
inline void MandelbrotConfig_MandelbrotRunArgs::set_out_filename(const char* value, size_t size) {
  
  out_filename_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bmp_grapher_proto.MandelbrotConfig.MandelbrotRunArgs.out_filename)
}
inline std::string* MandelbrotConfig_MandelbrotRunArgs::_internal_mutable_out_filename() {
  
  return out_filename_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MandelbrotConfig_MandelbrotRunArgs::release_out_filename() {
  // @@protoc_insertion_point(field_release:bmp_grapher_proto.MandelbrotConfig.MandelbrotRunArgs.out_filename)
  
  return out_filename_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MandelbrotConfig_MandelbrotRunArgs::set_allocated_out_filename(std::string* out_filename) {
  if (out_filename != nullptr) {
    
  } else {
    
  }
  out_filename_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), out_filename);
  // @@protoc_insertion_point(field_set_allocated:bmp_grapher_proto.MandelbrotConfig.MandelbrotRunArgs.out_filename)
}

// .bmp_grapher_proto.MandelbrotConfig.MandelbrotRunArgs.MandelbrotColorScheme color_scheme = 2;
inline void MandelbrotConfig_MandelbrotRunArgs::clear_color_scheme() {
  color_scheme_ = 0;
}
inline ::bmp_grapher_proto::MandelbrotConfig_MandelbrotRunArgs_MandelbrotColorScheme MandelbrotConfig_MandelbrotRunArgs::_internal_color_scheme() const {
  return static_cast< ::bmp_grapher_proto::MandelbrotConfig_MandelbrotRunArgs_MandelbrotColorScheme >(color_scheme_);
}
inline ::bmp_grapher_proto::MandelbrotConfig_MandelbrotRunArgs_MandelbrotColorScheme MandelbrotConfig_MandelbrotRunArgs::color_scheme() const {
  // @@protoc_insertion_point(field_get:bmp_grapher_proto.MandelbrotConfig.MandelbrotRunArgs.color_scheme)
  return _internal_color_scheme();
}
inline void MandelbrotConfig_MandelbrotRunArgs::_internal_set_color_scheme(::bmp_grapher_proto::MandelbrotConfig_MandelbrotRunArgs_MandelbrotColorScheme value) {
  
  color_scheme_ = value;
}
inline void MandelbrotConfig_MandelbrotRunArgs::set_color_scheme(::bmp_grapher_proto::MandelbrotConfig_MandelbrotRunArgs_MandelbrotColorScheme value) {
  _internal_set_color_scheme(value);
  // @@protoc_insertion_point(field_set:bmp_grapher_proto.MandelbrotConfig.MandelbrotRunArgs.color_scheme)
}

// .bmp_grapher_proto.MandelbrotConfig.MandelbrotRunArgs.SingleColorSchemeArgs single_color_scheme_args = 3;
inline bool MandelbrotConfig_MandelbrotRunArgs::_internal_has_single_color_scheme_args() const {
  return color_scheme_args_case() == kSingleColorSchemeArgs;
}
inline bool MandelbrotConfig_MandelbrotRunArgs::has_single_color_scheme_args() const {
  return _internal_has_single_color_scheme_args();
}
inline void MandelbrotConfig_MandelbrotRunArgs::set_has_single_color_scheme_args() {
  _oneof_case_[0] = kSingleColorSchemeArgs;
}
inline void MandelbrotConfig_MandelbrotRunArgs::clear_single_color_scheme_args() {
  if (_internal_has_single_color_scheme_args()) {
    delete color_scheme_args_.single_color_scheme_args_;
    clear_has_color_scheme_args();
  }
}
inline ::bmp_grapher_proto::MandelbrotConfig_MandelbrotRunArgs_SingleColorSchemeArgs* MandelbrotConfig_MandelbrotRunArgs::release_single_color_scheme_args() {
  // @@protoc_insertion_point(field_release:bmp_grapher_proto.MandelbrotConfig.MandelbrotRunArgs.single_color_scheme_args)
  if (_internal_has_single_color_scheme_args()) {
    clear_has_color_scheme_args();
      ::bmp_grapher_proto::MandelbrotConfig_MandelbrotRunArgs_SingleColorSchemeArgs* temp = color_scheme_args_.single_color_scheme_args_;
    color_scheme_args_.single_color_scheme_args_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::bmp_grapher_proto::MandelbrotConfig_MandelbrotRunArgs_SingleColorSchemeArgs& MandelbrotConfig_MandelbrotRunArgs::_internal_single_color_scheme_args() const {
  return _internal_has_single_color_scheme_args()
      ? *color_scheme_args_.single_color_scheme_args_
      : *reinterpret_cast< ::bmp_grapher_proto::MandelbrotConfig_MandelbrotRunArgs_SingleColorSchemeArgs*>(&::bmp_grapher_proto::_MandelbrotConfig_MandelbrotRunArgs_SingleColorSchemeArgs_default_instance_);
}
inline const ::bmp_grapher_proto::MandelbrotConfig_MandelbrotRunArgs_SingleColorSchemeArgs& MandelbrotConfig_MandelbrotRunArgs::single_color_scheme_args() const {
  // @@protoc_insertion_point(field_get:bmp_grapher_proto.MandelbrotConfig.MandelbrotRunArgs.single_color_scheme_args)
  return _internal_single_color_scheme_args();
}
inline ::bmp_grapher_proto::MandelbrotConfig_MandelbrotRunArgs_SingleColorSchemeArgs* MandelbrotConfig_MandelbrotRunArgs::_internal_mutable_single_color_scheme_args() {
  if (!_internal_has_single_color_scheme_args()) {
    clear_color_scheme_args();
    set_has_single_color_scheme_args();
    color_scheme_args_.single_color_scheme_args_ = CreateMaybeMessage< ::bmp_grapher_proto::MandelbrotConfig_MandelbrotRunArgs_SingleColorSchemeArgs >(
        GetArenaNoVirtual());
  }
  return color_scheme_args_.single_color_scheme_args_;
}
inline ::bmp_grapher_proto::MandelbrotConfig_MandelbrotRunArgs_SingleColorSchemeArgs* MandelbrotConfig_MandelbrotRunArgs::mutable_single_color_scheme_args() {
  // @@protoc_insertion_point(field_mutable:bmp_grapher_proto.MandelbrotConfig.MandelbrotRunArgs.single_color_scheme_args)
  return _internal_mutable_single_color_scheme_args();
}

inline bool MandelbrotConfig_MandelbrotRunArgs::has_color_scheme_args() const {
  return color_scheme_args_case() != COLOR_SCHEME_ARGS_NOT_SET;
}
inline void MandelbrotConfig_MandelbrotRunArgs::clear_has_color_scheme_args() {
  _oneof_case_[0] = COLOR_SCHEME_ARGS_NOT_SET;
}
inline MandelbrotConfig_MandelbrotRunArgs::ColorSchemeArgsCase MandelbrotConfig_MandelbrotRunArgs::color_scheme_args_case() const {
  return MandelbrotConfig_MandelbrotRunArgs::ColorSchemeArgsCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// MandelbrotConfig

// int32 max_iterations = 1;
inline void MandelbrotConfig::clear_max_iterations() {
  max_iterations_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MandelbrotConfig::_internal_max_iterations() const {
  return max_iterations_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MandelbrotConfig::max_iterations() const {
  // @@protoc_insertion_point(field_get:bmp_grapher_proto.MandelbrotConfig.max_iterations)
  return _internal_max_iterations();
}
inline void MandelbrotConfig::_internal_set_max_iterations(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  max_iterations_ = value;
}
inline void MandelbrotConfig::set_max_iterations(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_max_iterations(value);
  // @@protoc_insertion_point(field_set:bmp_grapher_proto.MandelbrotConfig.max_iterations)
}

// repeated .bmp_grapher_proto.MandelbrotConfig.MandelbrotRunArgs run_args = 2;
inline int MandelbrotConfig::_internal_run_args_size() const {
  return run_args_.size();
}
inline int MandelbrotConfig::run_args_size() const {
  return _internal_run_args_size();
}
inline void MandelbrotConfig::clear_run_args() {
  run_args_.Clear();
}
inline ::bmp_grapher_proto::MandelbrotConfig_MandelbrotRunArgs* MandelbrotConfig::mutable_run_args(int index) {
  // @@protoc_insertion_point(field_mutable:bmp_grapher_proto.MandelbrotConfig.run_args)
  return run_args_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bmp_grapher_proto::MandelbrotConfig_MandelbrotRunArgs >*
MandelbrotConfig::mutable_run_args() {
  // @@protoc_insertion_point(field_mutable_list:bmp_grapher_proto.MandelbrotConfig.run_args)
  return &run_args_;
}
inline const ::bmp_grapher_proto::MandelbrotConfig_MandelbrotRunArgs& MandelbrotConfig::_internal_run_args(int index) const {
  return run_args_.Get(index);
}
inline const ::bmp_grapher_proto::MandelbrotConfig_MandelbrotRunArgs& MandelbrotConfig::run_args(int index) const {
  // @@protoc_insertion_point(field_get:bmp_grapher_proto.MandelbrotConfig.run_args)
  return _internal_run_args(index);
}
inline ::bmp_grapher_proto::MandelbrotConfig_MandelbrotRunArgs* MandelbrotConfig::_internal_add_run_args() {
  return run_args_.Add();
}
inline ::bmp_grapher_proto::MandelbrotConfig_MandelbrotRunArgs* MandelbrotConfig::add_run_args() {
  // @@protoc_insertion_point(field_add:bmp_grapher_proto.MandelbrotConfig.run_args)
  return _internal_add_run_args();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bmp_grapher_proto::MandelbrotConfig_MandelbrotRunArgs >&
MandelbrotConfig::run_args() const {
  // @@protoc_insertion_point(field_list:bmp_grapher_proto.MandelbrotConfig.run_args)
  return run_args_;
}

// -------------------------------------------------------------------

// QuadraticConfig_QuadraticRunArgs_DualColorSchemeArgs

// double max_distance = 1;
inline void QuadraticConfig_QuadraticRunArgs_DualColorSchemeArgs::clear_max_distance() {
  max_distance_ = 0;
}
inline double QuadraticConfig_QuadraticRunArgs_DualColorSchemeArgs::_internal_max_distance() const {
  return max_distance_;
}
inline double QuadraticConfig_QuadraticRunArgs_DualColorSchemeArgs::max_distance() const {
  // @@protoc_insertion_point(field_get:bmp_grapher_proto.QuadraticConfig.QuadraticRunArgs.DualColorSchemeArgs.max_distance)
  return _internal_max_distance();
}
inline void QuadraticConfig_QuadraticRunArgs_DualColorSchemeArgs::_internal_set_max_distance(double value) {
  
  max_distance_ = value;
}
inline void QuadraticConfig_QuadraticRunArgs_DualColorSchemeArgs::set_max_distance(double value) {
  _internal_set_max_distance(value);
  // @@protoc_insertion_point(field_set:bmp_grapher_proto.QuadraticConfig.QuadraticRunArgs.DualColorSchemeArgs.max_distance)
}

// .bmp_grapher_proto.RGB background_color = 2;
inline bool QuadraticConfig_QuadraticRunArgs_DualColorSchemeArgs::_internal_has_background_color() const {
  return this != internal_default_instance() && background_color_ != nullptr;
}
inline bool QuadraticConfig_QuadraticRunArgs_DualColorSchemeArgs::has_background_color() const {
  return _internal_has_background_color();
}
inline void QuadraticConfig_QuadraticRunArgs_DualColorSchemeArgs::clear_background_color() {
  if (GetArenaNoVirtual() == nullptr && background_color_ != nullptr) {
    delete background_color_;
  }
  background_color_ = nullptr;
}
inline const ::bmp_grapher_proto::RGB& QuadraticConfig_QuadraticRunArgs_DualColorSchemeArgs::_internal_background_color() const {
  const ::bmp_grapher_proto::RGB* p = background_color_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bmp_grapher_proto::RGB*>(
      &::bmp_grapher_proto::_RGB_default_instance_);
}
inline const ::bmp_grapher_proto::RGB& QuadraticConfig_QuadraticRunArgs_DualColorSchemeArgs::background_color() const {
  // @@protoc_insertion_point(field_get:bmp_grapher_proto.QuadraticConfig.QuadraticRunArgs.DualColorSchemeArgs.background_color)
  return _internal_background_color();
}
inline ::bmp_grapher_proto::RGB* QuadraticConfig_QuadraticRunArgs_DualColorSchemeArgs::release_background_color() {
  // @@protoc_insertion_point(field_release:bmp_grapher_proto.QuadraticConfig.QuadraticRunArgs.DualColorSchemeArgs.background_color)
  
  ::bmp_grapher_proto::RGB* temp = background_color_;
  background_color_ = nullptr;
  return temp;
}
inline ::bmp_grapher_proto::RGB* QuadraticConfig_QuadraticRunArgs_DualColorSchemeArgs::_internal_mutable_background_color() {
  
  if (background_color_ == nullptr) {
    auto* p = CreateMaybeMessage<::bmp_grapher_proto::RGB>(GetArenaNoVirtual());
    background_color_ = p;
  }
  return background_color_;
}
inline ::bmp_grapher_proto::RGB* QuadraticConfig_QuadraticRunArgs_DualColorSchemeArgs::mutable_background_color() {
  // @@protoc_insertion_point(field_mutable:bmp_grapher_proto.QuadraticConfig.QuadraticRunArgs.DualColorSchemeArgs.background_color)
  return _internal_mutable_background_color();
}
inline void QuadraticConfig_QuadraticRunArgs_DualColorSchemeArgs::set_allocated_background_color(::bmp_grapher_proto::RGB* background_color) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete background_color_;
  }
  if (background_color) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      background_color = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, background_color, submessage_arena);
    }
    
  } else {
    
  }
  background_color_ = background_color;
  // @@protoc_insertion_point(field_set_allocated:bmp_grapher_proto.QuadraticConfig.QuadraticRunArgs.DualColorSchemeArgs.background_color)
}

// .bmp_grapher_proto.RGB curve_color = 3;
inline bool QuadraticConfig_QuadraticRunArgs_DualColorSchemeArgs::_internal_has_curve_color() const {
  return this != internal_default_instance() && curve_color_ != nullptr;
}
inline bool QuadraticConfig_QuadraticRunArgs_DualColorSchemeArgs::has_curve_color() const {
  return _internal_has_curve_color();
}
inline void QuadraticConfig_QuadraticRunArgs_DualColorSchemeArgs::clear_curve_color() {
  if (GetArenaNoVirtual() == nullptr && curve_color_ != nullptr) {
    delete curve_color_;
  }
  curve_color_ = nullptr;
}
inline const ::bmp_grapher_proto::RGB& QuadraticConfig_QuadraticRunArgs_DualColorSchemeArgs::_internal_curve_color() const {
  const ::bmp_grapher_proto::RGB* p = curve_color_;
  return p != nullptr ? *p : *reinterpret_cast<const ::bmp_grapher_proto::RGB*>(
      &::bmp_grapher_proto::_RGB_default_instance_);
}
inline const ::bmp_grapher_proto::RGB& QuadraticConfig_QuadraticRunArgs_DualColorSchemeArgs::curve_color() const {
  // @@protoc_insertion_point(field_get:bmp_grapher_proto.QuadraticConfig.QuadraticRunArgs.DualColorSchemeArgs.curve_color)
  return _internal_curve_color();
}
inline ::bmp_grapher_proto::RGB* QuadraticConfig_QuadraticRunArgs_DualColorSchemeArgs::release_curve_color() {
  // @@protoc_insertion_point(field_release:bmp_grapher_proto.QuadraticConfig.QuadraticRunArgs.DualColorSchemeArgs.curve_color)
  
  ::bmp_grapher_proto::RGB* temp = curve_color_;
  curve_color_ = nullptr;
  return temp;
}
inline ::bmp_grapher_proto::RGB* QuadraticConfig_QuadraticRunArgs_DualColorSchemeArgs::_internal_mutable_curve_color() {
  
  if (curve_color_ == nullptr) {
    auto* p = CreateMaybeMessage<::bmp_grapher_proto::RGB>(GetArenaNoVirtual());
    curve_color_ = p;
  }
  return curve_color_;
}
inline ::bmp_grapher_proto::RGB* QuadraticConfig_QuadraticRunArgs_DualColorSchemeArgs::mutable_curve_color() {
  // @@protoc_insertion_point(field_mutable:bmp_grapher_proto.QuadraticConfig.QuadraticRunArgs.DualColorSchemeArgs.curve_color)
  return _internal_mutable_curve_color();
}
inline void QuadraticConfig_QuadraticRunArgs_DualColorSchemeArgs::set_allocated_curve_color(::bmp_grapher_proto::RGB* curve_color) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete curve_color_;
  }
  if (curve_color) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      curve_color = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, curve_color, submessage_arena);
    }
    
  } else {
    
  }
  curve_color_ = curve_color;
  // @@protoc_insertion_point(field_set_allocated:bmp_grapher_proto.QuadraticConfig.QuadraticRunArgs.DualColorSchemeArgs.curve_color)
}

// -------------------------------------------------------------------

// QuadraticConfig_QuadraticRunArgs

// string out_filename = 1;
inline void QuadraticConfig_QuadraticRunArgs::clear_out_filename() {
  out_filename_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& QuadraticConfig_QuadraticRunArgs::out_filename() const {
  // @@protoc_insertion_point(field_get:bmp_grapher_proto.QuadraticConfig.QuadraticRunArgs.out_filename)
  return _internal_out_filename();
}
inline void QuadraticConfig_QuadraticRunArgs::set_out_filename(const std::string& value) {
  _internal_set_out_filename(value);
  // @@protoc_insertion_point(field_set:bmp_grapher_proto.QuadraticConfig.QuadraticRunArgs.out_filename)
}
inline std::string* QuadraticConfig_QuadraticRunArgs::mutable_out_filename() {
  // @@protoc_insertion_point(field_mutable:bmp_grapher_proto.QuadraticConfig.QuadraticRunArgs.out_filename)
  return _internal_mutable_out_filename();
}
inline const std::string& QuadraticConfig_QuadraticRunArgs::_internal_out_filename() const {
  return out_filename_.GetNoArena();
}
inline void QuadraticConfig_QuadraticRunArgs::_internal_set_out_filename(const std::string& value) {
  
  out_filename_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void QuadraticConfig_QuadraticRunArgs::set_out_filename(std::string&& value) {
  
  out_filename_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bmp_grapher_proto.QuadraticConfig.QuadraticRunArgs.out_filename)
}
inline void QuadraticConfig_QuadraticRunArgs::set_out_filename(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  out_filename_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bmp_grapher_proto.QuadraticConfig.QuadraticRunArgs.out_filename)
}
inline void QuadraticConfig_QuadraticRunArgs::set_out_filename(const char* value, size_t size) {
  
  out_filename_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bmp_grapher_proto.QuadraticConfig.QuadraticRunArgs.out_filename)
}
inline std::string* QuadraticConfig_QuadraticRunArgs::_internal_mutable_out_filename() {
  
  return out_filename_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* QuadraticConfig_QuadraticRunArgs::release_out_filename() {
  // @@protoc_insertion_point(field_release:bmp_grapher_proto.QuadraticConfig.QuadraticRunArgs.out_filename)
  
  return out_filename_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void QuadraticConfig_QuadraticRunArgs::set_allocated_out_filename(std::string* out_filename) {
  if (out_filename != nullptr) {
    
  } else {
    
  }
  out_filename_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), out_filename);
  // @@protoc_insertion_point(field_set_allocated:bmp_grapher_proto.QuadraticConfig.QuadraticRunArgs.out_filename)
}

// .bmp_grapher_proto.QuadraticConfig.QuadraticRunArgs.QuadraticColorScheme color_scheme = 2;
inline void QuadraticConfig_QuadraticRunArgs::clear_color_scheme() {
  color_scheme_ = 0;
}
inline ::bmp_grapher_proto::QuadraticConfig_QuadraticRunArgs_QuadraticColorScheme QuadraticConfig_QuadraticRunArgs::_internal_color_scheme() const {
  return static_cast< ::bmp_grapher_proto::QuadraticConfig_QuadraticRunArgs_QuadraticColorScheme >(color_scheme_);
}
inline ::bmp_grapher_proto::QuadraticConfig_QuadraticRunArgs_QuadraticColorScheme QuadraticConfig_QuadraticRunArgs::color_scheme() const {
  // @@protoc_insertion_point(field_get:bmp_grapher_proto.QuadraticConfig.QuadraticRunArgs.color_scheme)
  return _internal_color_scheme();
}
inline void QuadraticConfig_QuadraticRunArgs::_internal_set_color_scheme(::bmp_grapher_proto::QuadraticConfig_QuadraticRunArgs_QuadraticColorScheme value) {
  
  color_scheme_ = value;
}
inline void QuadraticConfig_QuadraticRunArgs::set_color_scheme(::bmp_grapher_proto::QuadraticConfig_QuadraticRunArgs_QuadraticColorScheme value) {
  _internal_set_color_scheme(value);
  // @@protoc_insertion_point(field_set:bmp_grapher_proto.QuadraticConfig.QuadraticRunArgs.color_scheme)
}

// .bmp_grapher_proto.QuadraticConfig.QuadraticRunArgs.DualColorSchemeArgs dual_color_scheme_args = 3;
inline bool QuadraticConfig_QuadraticRunArgs::_internal_has_dual_color_scheme_args() const {
  return color_scheme_args_case() == kDualColorSchemeArgs;
}
inline bool QuadraticConfig_QuadraticRunArgs::has_dual_color_scheme_args() const {
  return _internal_has_dual_color_scheme_args();
}
inline void QuadraticConfig_QuadraticRunArgs::set_has_dual_color_scheme_args() {
  _oneof_case_[0] = kDualColorSchemeArgs;
}
inline void QuadraticConfig_QuadraticRunArgs::clear_dual_color_scheme_args() {
  if (_internal_has_dual_color_scheme_args()) {
    delete color_scheme_args_.dual_color_scheme_args_;
    clear_has_color_scheme_args();
  }
}
inline ::bmp_grapher_proto::QuadraticConfig_QuadraticRunArgs_DualColorSchemeArgs* QuadraticConfig_QuadraticRunArgs::release_dual_color_scheme_args() {
  // @@protoc_insertion_point(field_release:bmp_grapher_proto.QuadraticConfig.QuadraticRunArgs.dual_color_scheme_args)
  if (_internal_has_dual_color_scheme_args()) {
    clear_has_color_scheme_args();
      ::bmp_grapher_proto::QuadraticConfig_QuadraticRunArgs_DualColorSchemeArgs* temp = color_scheme_args_.dual_color_scheme_args_;
    color_scheme_args_.dual_color_scheme_args_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::bmp_grapher_proto::QuadraticConfig_QuadraticRunArgs_DualColorSchemeArgs& QuadraticConfig_QuadraticRunArgs::_internal_dual_color_scheme_args() const {
  return _internal_has_dual_color_scheme_args()
      ? *color_scheme_args_.dual_color_scheme_args_
      : *reinterpret_cast< ::bmp_grapher_proto::QuadraticConfig_QuadraticRunArgs_DualColorSchemeArgs*>(&::bmp_grapher_proto::_QuadraticConfig_QuadraticRunArgs_DualColorSchemeArgs_default_instance_);
}
inline const ::bmp_grapher_proto::QuadraticConfig_QuadraticRunArgs_DualColorSchemeArgs& QuadraticConfig_QuadraticRunArgs::dual_color_scheme_args() const {
  // @@protoc_insertion_point(field_get:bmp_grapher_proto.QuadraticConfig.QuadraticRunArgs.dual_color_scheme_args)
  return _internal_dual_color_scheme_args();
}
inline ::bmp_grapher_proto::QuadraticConfig_QuadraticRunArgs_DualColorSchemeArgs* QuadraticConfig_QuadraticRunArgs::_internal_mutable_dual_color_scheme_args() {
  if (!_internal_has_dual_color_scheme_args()) {
    clear_color_scheme_args();
    set_has_dual_color_scheme_args();
    color_scheme_args_.dual_color_scheme_args_ = CreateMaybeMessage< ::bmp_grapher_proto::QuadraticConfig_QuadraticRunArgs_DualColorSchemeArgs >(
        GetArenaNoVirtual());
  }
  return color_scheme_args_.dual_color_scheme_args_;
}
inline ::bmp_grapher_proto::QuadraticConfig_QuadraticRunArgs_DualColorSchemeArgs* QuadraticConfig_QuadraticRunArgs::mutable_dual_color_scheme_args() {
  // @@protoc_insertion_point(field_mutable:bmp_grapher_proto.QuadraticConfig.QuadraticRunArgs.dual_color_scheme_args)
  return _internal_mutable_dual_color_scheme_args();
}

inline bool QuadraticConfig_QuadraticRunArgs::has_color_scheme_args() const {
  return color_scheme_args_case() != COLOR_SCHEME_ARGS_NOT_SET;
}
inline void QuadraticConfig_QuadraticRunArgs::clear_has_color_scheme_args() {
  _oneof_case_[0] = COLOR_SCHEME_ARGS_NOT_SET;
}
inline QuadraticConfig_QuadraticRunArgs::ColorSchemeArgsCase QuadraticConfig_QuadraticRunArgs::color_scheme_args_case() const {
  return QuadraticConfig_QuadraticRunArgs::ColorSchemeArgsCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// QuadraticConfig

// double param_a = 1;
inline void QuadraticConfig::clear_param_a() {
  param_a_ = 0;
}
inline double QuadraticConfig::_internal_param_a() const {
  return param_a_;
}
inline double QuadraticConfig::param_a() const {
  // @@protoc_insertion_point(field_get:bmp_grapher_proto.QuadraticConfig.param_a)
  return _internal_param_a();
}
inline void QuadraticConfig::_internal_set_param_a(double value) {
  
  param_a_ = value;
}
inline void QuadraticConfig::set_param_a(double value) {
  _internal_set_param_a(value);
  // @@protoc_insertion_point(field_set:bmp_grapher_proto.QuadraticConfig.param_a)
}

// double param_b = 2;
inline void QuadraticConfig::clear_param_b() {
  param_b_ = 0;
}
inline double QuadraticConfig::_internal_param_b() const {
  return param_b_;
}
inline double QuadraticConfig::param_b() const {
  // @@protoc_insertion_point(field_get:bmp_grapher_proto.QuadraticConfig.param_b)
  return _internal_param_b();
}
inline void QuadraticConfig::_internal_set_param_b(double value) {
  
  param_b_ = value;
}
inline void QuadraticConfig::set_param_b(double value) {
  _internal_set_param_b(value);
  // @@protoc_insertion_point(field_set:bmp_grapher_proto.QuadraticConfig.param_b)
}

// double param_c = 3;
inline void QuadraticConfig::clear_param_c() {
  param_c_ = 0;
}
inline double QuadraticConfig::_internal_param_c() const {
  return param_c_;
}
inline double QuadraticConfig::param_c() const {
  // @@protoc_insertion_point(field_get:bmp_grapher_proto.QuadraticConfig.param_c)
  return _internal_param_c();
}
inline void QuadraticConfig::_internal_set_param_c(double value) {
  
  param_c_ = value;
}
inline void QuadraticConfig::set_param_c(double value) {
  _internal_set_param_c(value);
  // @@protoc_insertion_point(field_set:bmp_grapher_proto.QuadraticConfig.param_c)
}

// repeated .bmp_grapher_proto.QuadraticConfig.QuadraticRunArgs run_args = 4;
inline int QuadraticConfig::_internal_run_args_size() const {
  return run_args_.size();
}
inline int QuadraticConfig::run_args_size() const {
  return _internal_run_args_size();
}
inline void QuadraticConfig::clear_run_args() {
  run_args_.Clear();
}
inline ::bmp_grapher_proto::QuadraticConfig_QuadraticRunArgs* QuadraticConfig::mutable_run_args(int index) {
  // @@protoc_insertion_point(field_mutable:bmp_grapher_proto.QuadraticConfig.run_args)
  return run_args_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bmp_grapher_proto::QuadraticConfig_QuadraticRunArgs >*
QuadraticConfig::mutable_run_args() {
  // @@protoc_insertion_point(field_mutable_list:bmp_grapher_proto.QuadraticConfig.run_args)
  return &run_args_;
}
inline const ::bmp_grapher_proto::QuadraticConfig_QuadraticRunArgs& QuadraticConfig::_internal_run_args(int index) const {
  return run_args_.Get(index);
}
inline const ::bmp_grapher_proto::QuadraticConfig_QuadraticRunArgs& QuadraticConfig::run_args(int index) const {
  // @@protoc_insertion_point(field_get:bmp_grapher_proto.QuadraticConfig.run_args)
  return _internal_run_args(index);
}
inline ::bmp_grapher_proto::QuadraticConfig_QuadraticRunArgs* QuadraticConfig::_internal_add_run_args() {
  return run_args_.Add();
}
inline ::bmp_grapher_proto::QuadraticConfig_QuadraticRunArgs* QuadraticConfig::add_run_args() {
  // @@protoc_insertion_point(field_add:bmp_grapher_proto.QuadraticConfig.run_args)
  return _internal_add_run_args();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bmp_grapher_proto::QuadraticConfig_QuadraticRunArgs >&
QuadraticConfig::run_args() const {
  // @@protoc_insertion_point(field_list:bmp_grapher_proto.QuadraticConfig.run_args)
  return run_args_;
}

// -------------------------------------------------------------------

// BmpGrapher

// double x_center = 1;
inline void BmpGrapher::clear_x_center() {
  x_center_ = 0;
}
inline double BmpGrapher::_internal_x_center() const {
  return x_center_;
}
inline double BmpGrapher::x_center() const {
  // @@protoc_insertion_point(field_get:bmp_grapher_proto.BmpGrapher.x_center)
  return _internal_x_center();
}
inline void BmpGrapher::_internal_set_x_center(double value) {
  
  x_center_ = value;
}
inline void BmpGrapher::set_x_center(double value) {
  _internal_set_x_center(value);
  // @@protoc_insertion_point(field_set:bmp_grapher_proto.BmpGrapher.x_center)
}

// double y_center = 2;
inline void BmpGrapher::clear_y_center() {
  y_center_ = 0;
}
inline double BmpGrapher::_internal_y_center() const {
  return y_center_;
}
inline double BmpGrapher::y_center() const {
  // @@protoc_insertion_point(field_get:bmp_grapher_proto.BmpGrapher.y_center)
  return _internal_y_center();
}
inline void BmpGrapher::_internal_set_y_center(double value) {
  
  y_center_ = value;
}
inline void BmpGrapher::set_y_center(double value) {
  _internal_set_y_center(value);
  // @@protoc_insertion_point(field_set:bmp_grapher_proto.BmpGrapher.y_center)
}

// double x_domain_width = 3;
inline void BmpGrapher::clear_x_domain_width() {
  x_domain_width_ = 0;
}
inline double BmpGrapher::_internal_x_domain_width() const {
  return x_domain_width_;
}
inline double BmpGrapher::x_domain_width() const {
  // @@protoc_insertion_point(field_get:bmp_grapher_proto.BmpGrapher.x_domain_width)
  return _internal_x_domain_width();
}
inline void BmpGrapher::_internal_set_x_domain_width(double value) {
  
  x_domain_width_ = value;
}
inline void BmpGrapher::set_x_domain_width(double value) {
  _internal_set_x_domain_width(value);
  // @@protoc_insertion_point(field_set:bmp_grapher_proto.BmpGrapher.x_domain_width)
}

// int32 pixel_width = 4;
inline void BmpGrapher::clear_pixel_width() {
  pixel_width_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 BmpGrapher::_internal_pixel_width() const {
  return pixel_width_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 BmpGrapher::pixel_width() const {
  // @@protoc_insertion_point(field_get:bmp_grapher_proto.BmpGrapher.pixel_width)
  return _internal_pixel_width();
}
inline void BmpGrapher::_internal_set_pixel_width(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  pixel_width_ = value;
}
inline void BmpGrapher::set_pixel_width(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_pixel_width(value);
  // @@protoc_insertion_point(field_set:bmp_grapher_proto.BmpGrapher.pixel_width)
}

// int32 pixel_height = 5;
inline void BmpGrapher::clear_pixel_height() {
  pixel_height_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 BmpGrapher::_internal_pixel_height() const {
  return pixel_height_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 BmpGrapher::pixel_height() const {
  // @@protoc_insertion_point(field_get:bmp_grapher_proto.BmpGrapher.pixel_height)
  return _internal_pixel_height();
}
inline void BmpGrapher::_internal_set_pixel_height(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  pixel_height_ = value;
}
inline void BmpGrapher::set_pixel_height(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_pixel_height(value);
  // @@protoc_insertion_point(field_set:bmp_grapher_proto.BmpGrapher.pixel_height)
}

// .bmp_grapher_proto.MandelbrotConfig mandelbrot_config = 6;
inline bool BmpGrapher::_internal_has_mandelbrot_config() const {
  return bmp_grapher_config_case() == kMandelbrotConfig;
}
inline bool BmpGrapher::has_mandelbrot_config() const {
  return _internal_has_mandelbrot_config();
}
inline void BmpGrapher::set_has_mandelbrot_config() {
  _oneof_case_[0] = kMandelbrotConfig;
}
inline void BmpGrapher::clear_mandelbrot_config() {
  if (_internal_has_mandelbrot_config()) {
    delete bmp_grapher_config_.mandelbrot_config_;
    clear_has_bmp_grapher_config();
  }
}
inline ::bmp_grapher_proto::MandelbrotConfig* BmpGrapher::release_mandelbrot_config() {
  // @@protoc_insertion_point(field_release:bmp_grapher_proto.BmpGrapher.mandelbrot_config)
  if (_internal_has_mandelbrot_config()) {
    clear_has_bmp_grapher_config();
      ::bmp_grapher_proto::MandelbrotConfig* temp = bmp_grapher_config_.mandelbrot_config_;
    bmp_grapher_config_.mandelbrot_config_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::bmp_grapher_proto::MandelbrotConfig& BmpGrapher::_internal_mandelbrot_config() const {
  return _internal_has_mandelbrot_config()
      ? *bmp_grapher_config_.mandelbrot_config_
      : *reinterpret_cast< ::bmp_grapher_proto::MandelbrotConfig*>(&::bmp_grapher_proto::_MandelbrotConfig_default_instance_);
}
inline const ::bmp_grapher_proto::MandelbrotConfig& BmpGrapher::mandelbrot_config() const {
  // @@protoc_insertion_point(field_get:bmp_grapher_proto.BmpGrapher.mandelbrot_config)
  return _internal_mandelbrot_config();
}
inline ::bmp_grapher_proto::MandelbrotConfig* BmpGrapher::_internal_mutable_mandelbrot_config() {
  if (!_internal_has_mandelbrot_config()) {
    clear_bmp_grapher_config();
    set_has_mandelbrot_config();
    bmp_grapher_config_.mandelbrot_config_ = CreateMaybeMessage< ::bmp_grapher_proto::MandelbrotConfig >(
        GetArenaNoVirtual());
  }
  return bmp_grapher_config_.mandelbrot_config_;
}
inline ::bmp_grapher_proto::MandelbrotConfig* BmpGrapher::mutable_mandelbrot_config() {
  // @@protoc_insertion_point(field_mutable:bmp_grapher_proto.BmpGrapher.mandelbrot_config)
  return _internal_mutable_mandelbrot_config();
}

// .bmp_grapher_proto.QuadraticConfig quadratic_config = 7;
inline bool BmpGrapher::_internal_has_quadratic_config() const {
  return bmp_grapher_config_case() == kQuadraticConfig;
}
inline bool BmpGrapher::has_quadratic_config() const {
  return _internal_has_quadratic_config();
}
inline void BmpGrapher::set_has_quadratic_config() {
  _oneof_case_[0] = kQuadraticConfig;
}
inline void BmpGrapher::clear_quadratic_config() {
  if (_internal_has_quadratic_config()) {
    delete bmp_grapher_config_.quadratic_config_;
    clear_has_bmp_grapher_config();
  }
}
inline ::bmp_grapher_proto::QuadraticConfig* BmpGrapher::release_quadratic_config() {
  // @@protoc_insertion_point(field_release:bmp_grapher_proto.BmpGrapher.quadratic_config)
  if (_internal_has_quadratic_config()) {
    clear_has_bmp_grapher_config();
      ::bmp_grapher_proto::QuadraticConfig* temp = bmp_grapher_config_.quadratic_config_;
    bmp_grapher_config_.quadratic_config_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::bmp_grapher_proto::QuadraticConfig& BmpGrapher::_internal_quadratic_config() const {
  return _internal_has_quadratic_config()
      ? *bmp_grapher_config_.quadratic_config_
      : *reinterpret_cast< ::bmp_grapher_proto::QuadraticConfig*>(&::bmp_grapher_proto::_QuadraticConfig_default_instance_);
}
inline const ::bmp_grapher_proto::QuadraticConfig& BmpGrapher::quadratic_config() const {
  // @@protoc_insertion_point(field_get:bmp_grapher_proto.BmpGrapher.quadratic_config)
  return _internal_quadratic_config();
}
inline ::bmp_grapher_proto::QuadraticConfig* BmpGrapher::_internal_mutable_quadratic_config() {
  if (!_internal_has_quadratic_config()) {
    clear_bmp_grapher_config();
    set_has_quadratic_config();
    bmp_grapher_config_.quadratic_config_ = CreateMaybeMessage< ::bmp_grapher_proto::QuadraticConfig >(
        GetArenaNoVirtual());
  }
  return bmp_grapher_config_.quadratic_config_;
}
inline ::bmp_grapher_proto::QuadraticConfig* BmpGrapher::mutable_quadratic_config() {
  // @@protoc_insertion_point(field_mutable:bmp_grapher_proto.BmpGrapher.quadratic_config)
  return _internal_mutable_quadratic_config();
}

inline bool BmpGrapher::has_bmp_grapher_config() const {
  return bmp_grapher_config_case() != BMP_GRAPHER_CONFIG_NOT_SET;
}
inline void BmpGrapher::clear_has_bmp_grapher_config() {
  _oneof_case_[0] = BMP_GRAPHER_CONFIG_NOT_SET;
}
inline BmpGrapher::BmpGrapherConfigCase BmpGrapher::bmp_grapher_config_case() const {
  return BmpGrapher::BmpGrapherConfigCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// BmpGrapherFactory

// repeated .bmp_grapher_proto.BmpGrapher bitmaps = 1;
inline int BmpGrapherFactory::_internal_bitmaps_size() const {
  return bitmaps_.size();
}
inline int BmpGrapherFactory::bitmaps_size() const {
  return _internal_bitmaps_size();
}
inline void BmpGrapherFactory::clear_bitmaps() {
  bitmaps_.Clear();
}
inline ::bmp_grapher_proto::BmpGrapher* BmpGrapherFactory::mutable_bitmaps(int index) {
  // @@protoc_insertion_point(field_mutable:bmp_grapher_proto.BmpGrapherFactory.bitmaps)
  return bitmaps_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bmp_grapher_proto::BmpGrapher >*
BmpGrapherFactory::mutable_bitmaps() {
  // @@protoc_insertion_point(field_mutable_list:bmp_grapher_proto.BmpGrapherFactory.bitmaps)
  return &bitmaps_;
}
inline const ::bmp_grapher_proto::BmpGrapher& BmpGrapherFactory::_internal_bitmaps(int index) const {
  return bitmaps_.Get(index);
}
inline const ::bmp_grapher_proto::BmpGrapher& BmpGrapherFactory::bitmaps(int index) const {
  // @@protoc_insertion_point(field_get:bmp_grapher_proto.BmpGrapherFactory.bitmaps)
  return _internal_bitmaps(index);
}
inline ::bmp_grapher_proto::BmpGrapher* BmpGrapherFactory::_internal_add_bitmaps() {
  return bitmaps_.Add();
}
inline ::bmp_grapher_proto::BmpGrapher* BmpGrapherFactory::add_bitmaps() {
  // @@protoc_insertion_point(field_add:bmp_grapher_proto.BmpGrapherFactory.bitmaps)
  return _internal_add_bitmaps();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::bmp_grapher_proto::BmpGrapher >&
BmpGrapherFactory::bitmaps() const {
  // @@protoc_insertion_point(field_list:bmp_grapher_proto.BmpGrapherFactory.bitmaps)
  return bitmaps_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace bmp_grapher_proto

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::bmp_grapher_proto::MandelbrotConfig_MandelbrotRunArgs_MandelbrotColorScheme> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::bmp_grapher_proto::MandelbrotConfig_MandelbrotRunArgs_MandelbrotColorScheme>() {
  return ::bmp_grapher_proto::MandelbrotConfig_MandelbrotRunArgs_MandelbrotColorScheme_descriptor();
}
template <> struct is_proto_enum< ::bmp_grapher_proto::QuadraticConfig_QuadraticRunArgs_QuadraticColorScheme> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::bmp_grapher_proto::QuadraticConfig_QuadraticRunArgs_QuadraticColorScheme>() {
  return ::bmp_grapher_proto::QuadraticConfig_QuadraticRunArgs_QuadraticColorScheme_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_bmp_5fgrapher_2eproto
